{"version":3,"file":"select.js","sourceRoot":"","sources":["../../../src/components/select/select.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, PropertyValueMap } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { themes } from '../../theming/index.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport IgcDropdownItemComponent from '../dropdown/dropdown-item.js';\nimport IgcDropdownComponent, {\n  IgcDropdownEventMap,\n} from '../dropdown/dropdown.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport IgcInputComponent from '../input/input.js';\nimport IgcSelectGroupComponent from './select-group.js';\nimport IgcSelectHeaderComponent from './select-header.js';\nimport IgcSelectItemComponent from './select-item.js';\nimport type { ThemeController, Theme } from '../../theming/types.js';\nimport { styles } from './themes/light/select.base.css.js';\nimport { styles as bootstrap } from './themes/light/select.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/select.fluent.css.js';\nimport { styles as indigo } from './themes/light/select.indigo.css.js';\nimport { styles as material } from './themes/light/select.material.css.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\n\ndefineComponents(\n  IgcIconComponent,\n  IgcInputComponent,\n  IgcSelectGroupComponent,\n  IgcSelectHeaderComponent,\n  IgcSelectItemComponent\n);\n\nexport interface IgcSelectEventMap extends IgcDropdownEventMap {\n  igcFocus: CustomEvent<void>;\n  igcBlur: CustomEvent<void>;\n}\n\n@themes({ bootstrap, material, fluent, indigo })\n@blazorAdditionalDependencies(\n  'IgcIconComponent, IgcInputComponent, IgcSelectGroupComponent, IgcSelectHeaderComponent, IgcSelectItemComponent'\n)\n/**\n * @element igc-select\n *\n * @slot - Renders the list of select items.\n * @slot prefix - Renders content before the input.\n * @slot suffix - Renders content after input.\n * @slot header - Renders a container before the list of options.\n * @slot footer - Renders a container after the list of options.\n * @slot helper-text - Renders content below the input.\n * @slot toggle-icon - Renders content inside the suffix container.\n *\n * @fires igcFocus - Emitted when the select gains focus.\n * @fires igcBlur - Emitted when the select loses focus.\n * @fires igcChange - Emitted when the control's checked state changes.\n * @fires igcOpening - Emitted just before the list of options is opened.\n * @fires igcOpened - Emitted after the list of options is opened.\n * @fires igcClosing - Emitter just before the list of options is closed.\n * @fires igcClosed - Emitted after the list of options is closed.\n *\n * @csspart list - The list of options wrapper.\n * @csspart input - The encapsulated igc-input.\n * @csspart label - The encapsulated text label.\n * @csspart prefix - The prefix wrapper.\n * @csspart suffix - The suffix wrapper.\n * @csspart toggle-icon - The toggle icon wrapper.\n * @csspart helper-text - The helper text wrapper.\n */\nexport default class IgcSelectComponent extends EventEmitterMixin<\n  IgcSelectEventMap,\n  Constructor<IgcDropdownComponent>\n>(IgcDropdownComponent) {\n  /** @private */\n  public static readonly tagName = 'igc-select';\n  public static styles = styles;\n  private searchTerm = '';\n  private lastKeyTime = Date.now();\n  protected themeController!: ThemeController;\n  protected theme!: Theme;\n\n  private readonly targetKeyHandlers: Map<string, Function> = new Map(\n    Object.entries({\n      ' ': this.onTargetEnterKey,\n      Tab: this.onTargetTabKey,\n      Escape: this.onEscapeKey,\n      Enter: this.onTargetEnterKey,\n      ArrowLeft: this.onTargetArrowLeftKeyDown,\n      ArrowRight: this.onTargetArrowRightKeyDown,\n      ArrowUp: this.onTargetArrowUpKeyDown,\n      ArrowDown: this.onTargetArrowDownKeyDown,\n      Home: this.onTargetHomeKey,\n      End: this.onTargetEndKey,\n    })\n  );\n\n  @queryAssignedElements({ flatten: true, selector: 'igc-select-item' })\n  protected override items!: Array<IgcSelectItemComponent>;\n\n  @queryAssignedElements({ flatten: true, selector: 'igc-select-group' })\n  protected override groups!: Array<IgcSelectGroupComponent>;\n\n  @queryAssignedElements({ slot: 'helper-text' })\n  protected helperText!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'suffix' })\n  protected inputSuffix!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'prefix' })\n  protected inputPrefix!: Array<HTMLElement>;\n\n  @state()\n  protected override selectedItem!: IgcSelectItemComponent | null;\n\n  @query('div[role=\"combobox\"]')\n  protected override target!: IgcInputComponent;\n\n  /**\n   * The value attribute of the control.\n   * @attr\n   */\n  @property({ reflect: false, type: String })\n  public value?: string | undefined;\n\n  /**\n   * The name attribute of the control.\n   * @attr\n   */\n  @property()\n  public name!: string;\n\n  /**\n   * The disabled attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public disabled = false;\n\n  /**\n   * The required attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public required = false;\n\n  /**\n   * The invalid attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public invalid = false;\n\n  /**\n   * The outlined attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public outlined = false;\n\n  /**\n   * The autofocus attribute of the control.\n   * @attr\n   */\n  @property({ type: Boolean })\n  public override autofocus!: boolean;\n\n  /**\n   * The label attribute of the control.\n   * @attr\n   */\n  @property()\n  public label!: string;\n\n  /**\n   * The placeholder attribute of the control.\n   * @attr\n   */\n  @property()\n  public placeholder!: string;\n\n  /**\n   * Whether the dropdown's width should be the same as the target's one.\n   * @attr same-width\n   */\n  @property({ type: Boolean, attribute: 'same-width' })\n  public override sameWidth = true;\n\n  /**\n   * The direction attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true })\n  public override dir: 'ltr' | 'rtl' | 'auto' = 'auto';\n\n  constructor() {\n    super();\n    this.size = 'medium';\n\n    /** Return the focus to the target element when closing the list of options. */\n    this.addEventListener('igcChange', () => {\n      if (this.open) this.target.focus();\n    });\n  }\n\n  protected themeAdopted(controller: ThemeController) {\n    this.themeController = controller;\n  }\n\n  protected override willUpdate(changes: PropertyValueMap<any>) {\n    super.willUpdate(changes);\n\n    this.theme = this.themeController.theme;\n  }\n\n  /** Override the dropdown target focusout behavior to prevent the focus from\n   * being returned to the target element when the select loses focus. */\n  protected override handleFocusout() {}\n\n  /** Sets focus on the component. */\n  @alternateName('focusComponent')\n  public override focus(options?: FocusOptions) {\n    this.target.focus(options);\n  }\n\n  /** Removes focus from the component. */\n  @alternateName('blurComponent')\n  public override blur() {\n    this.target.blur();\n  }\n\n  /** Checks the validity of the control and moves the focus to it if it is not valid. */\n  public reportValidity() {\n    const valid = this.checkValidity();\n    if (!valid) this.target.focus();\n    return valid;\n  }\n\n  /** Checks the validity of the control. */\n  public checkValidity() {\n    this.invalid = this.required && !this.value;\n    return !this.invalid;\n  }\n\n  public override async firstUpdated() {\n    super.firstUpdated();\n    await this.updateComplete;\n\n    if (!this.selectedItem && this.value) {\n      this.updateSelected();\n    }\n\n    if (this.autofocus) {\n      this.target.focus();\n    }\n  }\n\n  @watch('selectedItem')\n  protected updateValue() {\n    this.value = this.selectedItem?.value;\n  }\n\n  @watch('value')\n  protected updateSelected() {\n    if (this.allItems.length === 0) return;\n\n    if (this.selectedItem?.value !== this.value) {\n      const matches = this.allItems.filter((i) => i.value === this.value);\n      const index = this.allItems.indexOf(\n        matches.at(-1) as IgcSelectItemComponent\n      );\n\n      if (index === -1) {\n        this.value = undefined;\n        this.clearSelection();\n        return;\n      }\n\n      this.select(index);\n    }\n  }\n\n  @watch('value')\n  protected validate() {\n    this.updateComplete.then(() => this.reportValidity());\n  }\n\n  protected selectNext() {\n    const activeItemIndex = [...this.allItems].indexOf(\n      this.selectedItem ?? this.activeItem\n    );\n\n    const next = this.getNearestSiblingFocusableItemIndex(\n      activeItemIndex ?? -1,\n      1\n    );\n    this.selectItem(this.allItems[next], true);\n  }\n\n  protected selectPrev() {\n    const activeItemIndex = [...this.allItems].indexOf(\n      this.selectedItem ?? this.activeItem\n    );\n    const prev = this.getNearestSiblingFocusableItemIndex(\n      activeItemIndex ?? -1,\n      -1\n    );\n    this.selectItem(this.allItems[prev], true);\n  }\n\n  protected selectInteractiveItem(index: number) {\n    const item = this.allItems\n      .filter((i) => !i.disabled)\n      .at(index) as IgcDropdownItemComponent;\n\n    if (item.value !== this.value) {\n      this.selectItem(item, true);\n    }\n  }\n\n  protected searchItem(event: KeyboardEvent): void {\n    // ignore longer keys ('Alt', 'ArrowDown', etc)\n    if (!/^.$/u.test(event.key)) {\n      return;\n    }\n\n    const currentTime = Date.now();\n\n    if (currentTime - this.lastKeyTime > 500) {\n      this.searchTerm = '';\n    }\n\n    this.searchTerm += event.key;\n    this.lastKeyTime = currentTime;\n\n    const item = this.allItems\n      .filter((i) => !i.disabled)\n      .find((i) =>\n        i.textContent\n          ?.trim()\n          .toLowerCase()\n          .startsWith(this.searchTerm.toLowerCase())\n      );\n\n    if (item && this.value !== item.value) {\n      this.open ? this.activateItem(item) : this.selectItem(item);\n    }\n  }\n\n  protected handleFocus() {\n    if (this.open) return;\n    this.emitEvent('igcFocus');\n  }\n\n  protected handleBlur() {\n    if (this.open) return;\n    this.emitEvent('igcBlur');\n  }\n\n  protected onTargetTabKey() {\n    this.target.blur();\n    if (this.open) this.hide();\n  }\n\n  protected onTargetEnterKey() {\n    !this.open ? this.target.click() : this.onEnterKey();\n  }\n\n  protected onTargetArrowLeftKeyDown() {\n    !this.open ? this.selectPrev() : this.onArrowUpKeyDown();\n  }\n\n  protected onTargetArrowRightKeyDown() {\n    !this.open ? this.selectNext() : this.onArrowDownKeyDown();\n  }\n\n  protected onTargetArrowUpKeyDown(event: KeyboardEvent) {\n    if (event.altKey) {\n      this.toggle();\n    } else {\n      !this.open ? this.selectPrev() : this.onArrowUpKeyDown();\n    }\n  }\n\n  protected onTargetArrowDownKeyDown(event: KeyboardEvent) {\n    if (event.altKey) {\n      this.toggle();\n    } else {\n      !this.open ? this.selectNext() : this.onArrowDownKeyDown();\n    }\n  }\n\n  protected onTargetHomeKey() {\n    !this.open ? this.selectInteractiveItem(0) : this.onHomeKey();\n  }\n\n  protected onTargetEndKey() {\n    !this.open ? this.selectInteractiveItem(-1) : this.onEndKey();\n  }\n\n  protected handleTargetKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n\n    if (this.targetKeyHandlers.has(event.key)) {\n      event.preventDefault();\n      this.targetKeyHandlers.get(event.key)?.call(this, event);\n    } else {\n      this.searchItem(event);\n    }\n  }\n\n  protected get hasPrefixes() {\n    return this.inputPrefix.length > 0;\n  }\n\n  protected get hasSuffixes() {\n    return this.inputSuffix.length > 0;\n  }\n\n  protected override render() {\n    const openIcon =\n      this.theme === 'material' ? 'keyboard_arrow_up' : 'arrow_drop_up';\n    const closeIcon =\n      this.theme === 'material' ? 'keyboard_arrow_down' : 'arrow_drop_down';\n\n    return html`\n      <div\n        role=\"combobox\"\n        tabindex=${this.disabled ? -1 : 0}\n        aria-owns=\"dropdown\"\n        aria-describedby=\"helper-text\"\n        aria-disabled=${this.disabled}\n        @focusin=${this.handleFocus}\n        @focusout=${this.handleBlur}\n        @keydown=${this.handleTargetKeyDown}\n        @click=${this.handleTargetClick}\n      >\n        <igc-input\n          id=\"input\"\n          readonly\n          exportparts=\"container: input, input: native-input, label, prefix, suffix\"\n          value=${ifDefined(this.selectedItem?.textContent?.trim())}\n          placeholder=${ifDefined(this.placeholder)}\n          label=${ifDefined(this.label)}\n          size=${this.size}\n          dir=${this.dir}\n          tabindex=\"-1\"\n          .disabled=\"${this.disabled}\"\n          .required=${this.required}\n          .invalid=${this.invalid}\n          .outlined=${this.outlined}\n          @igcBlur=${(e: Event) => e.stopPropagation()}\n          @igcFocus=${(e: Event) => e.stopPropagation()}\n        >\n          <span slot=${this.hasPrefixes ? 'prefix' : ''}>\n            <slot name=\"prefix\"></slot>\n          </span>\n          <span slot=${this.hasSuffixes ? 'suffix' : ''}>\n            <slot name=\"suffix\"></slot>\n          </span>\n          <span slot=\"suffix\" part=\"toggle-icon\" style=\"display: flex\">\n            <slot name=\"toggle-icon\">\n              <igc-icon\n                size=${this.size}\n                name=${this.open ? openIcon : closeIcon}\n                collection=\"internal\"\n                aria-hidden=\"true\"\n              ></igc-icon>\n            </slot>\n          </span>\n        </igc-input>\n      </div>\n      <div\n        id=\"helper-text\"\n        part=\"helper-text\"\n        ?hidden=\"${this.helperText.length === 0}\"\n      >\n        <slot name=\"helper-text\"></slot>\n      </div>\n      <div\n        part=\"base\"\n        style=${styleMap({ position: this.positionStrategy })}\n        @click=${this.handleClick}\n        ${this.toggleController.toggleDirective}\n      >\n        <div id=\"dropdown\" role=\"listbox\" part=\"list\" aria-labelledby=\"input\">\n          <slot name=\"header\"></slot>\n          <slot></slot>\n          <slot name=\"footer\"></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-select': IgcSelectComponent;\n  }\n}\n"]}
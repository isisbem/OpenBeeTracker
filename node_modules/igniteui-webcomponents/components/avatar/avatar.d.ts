import { LitElement } from 'lit';
declare const IgcAvatarComponent_base: import("../common/mixins/constructor.js").Constructor<import("../common/mixins/sizable.js").SizableInterface> & typeof LitElement;
/**
 * An avatar component is used as a representation of a user identity
 * typically in a user profile.
 *
 * @element igc-avatar
 *
 * @slot - Renders an icon inside the default slot.
 *
 * @csspart base - The base wrapper of the avatar.
 * @csspart initials - The initials wrapper of the avatar.
 * @csspart image - The image wrapper of the avatar.
 * @csspart icon - The icon wrapper of the avatar.
 */
export default class IgcAvatarComponent extends IgcAvatarComponent_base {
    static readonly tagName = "igc-avatar";
    static styles: import("lit").CSSResult;
    /**
     * The image source to use.
     * @attr
     */
    src: string;
    private hasError;
    /**
     * Alternative text for the image.
     * @attr
     */
    alt: string;
    /**
     * Initials to use as a fallback when no image is available.
     * @attr
     */
    initials: string;
    /**
     * The shape of the avatar.
     * @attr
     */
    shape: 'circle' | 'rounded' | 'square';
    private get classes();
    constructor();
    protected handleErrorState(): void;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-avatar': IgcAvatarComponent;
    }
}
export {};

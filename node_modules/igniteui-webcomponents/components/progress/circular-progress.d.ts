import { IgcProgressBaseComponent } from './base.js';
import IgcCircularGradientComponent from './circular-gradient.js';
/**
 * A circular progress indicator used to express unspecified wait time or display
 * the length of a process.
 *
 * @element igc-circular-progress
 *
 * @slot - The text area container.
 * @slot gradient - Customize the progress bar in order to use a color gradient instead of a solid color. Accepts `igc-circular-gradient` elements.
 *
 * @csspart svg
 * @csspart gradient_start
 * @csspart gradient_end
 * @csspart track
 * @csspart fill
 * @csspart label
 * @csspart value
 * @csspart indeterminate
 * @csspart primary
 * @csspart danger
 * @csspart warning
 * @csspart info
 * @csspart success
 */
export default class IgcCircularProgressComponent extends IgcProgressBaseComponent {
    static readonly tagName = "igc-circular-progress";
    static styles: import("lit").CSSResult;
    protected gradientId: string;
    protected gradientElements: Array<IgcCircularGradientComponent>;
    protected get stroke(): {
        stroke: string;
        '--percentage': string;
        '--duration': string;
    };
    protected get svgParts(): {
        indeterminate: boolean;
    };
    private gradientChange;
    protected renderSvg(): import("lit-html").TemplateResult<2>;
    protected renderWrapper(): import("lit-html").TemplateResult<1>;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-circular-progress': IgcCircularProgressComponent;
    }
}

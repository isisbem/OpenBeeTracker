{"version":3,"file":"sizable.js","sourceRoot":"","sources":["../../../../src/components/common/mixins/sizable.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAW7C,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,UAAa,EACb,EAAE;IACF,MAAM,cAAe,SAAQ,UAAU;QAAvC;;YAOS,SAAI,GAAiC,OAAO,CAAC;QACtD,CAAC;KAAA;IADC;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;gDACwB;IAEtD,OAAO,cAAmD,CAAC;AAC7D,CAAC,CAAC","sourcesContent":["import { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport type { Constructor } from './constructor';\n\nexport declare class SizableInterface {\n  /**\n   * Determines the size of the component.\n   * @type {\"small\" | \"medium\" | \"large\"}\n   */\n  public size: 'small' | 'medium' | 'large';\n}\n\nexport const SizableMixin = <T extends Constructor<LitElement>>(\n  superClass: T\n) => {\n  class SizableElement extends superClass {\n    /**\n     * Determines the size of the component.\n     * @attr\n     * @type {\"small\" | \"medium\" | \"large\"}\n     */\n    @property({ reflect: true })\n    public size: 'small' | 'medium' | 'large' = 'large';\n  }\n  return SizableElement as Constructor<SizableInterface> & T;\n};\n"]}
export const partNameMap = (partNameInfo) => {
    return Object.keys(partNameInfo)
        .filter((key) => partNameInfo[key])
        .join(' ');
};
export const asPercent = (part, whole) => (part / whole) * 100;
export const clamp = (number, min, max) => Math.max(min, Math.min(number, max));
export function getOffset(element, parent) {
    const { top, left, bottom, right } = element.getBoundingClientRect();
    const { top: pTop, left: pLeft, bottom: pBottom, right: pRight, } = parent.getBoundingClientRect();
    return {
        top: Math.round(top - pTop),
        left: Math.round(left - pLeft),
        right: Math.round(right - pRight),
        bottom: Math.round(bottom - pBottom),
    };
}
export function createCounter() {
    let i = 0;
    return function () {
        i++;
        return i;
    };
}
export function isLTR(element) {
    return getComputedStyle(element).getPropertyValue('direction') === 'ltr';
}
//# sourceMappingURL=util.js.map
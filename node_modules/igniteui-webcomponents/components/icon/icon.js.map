{"version":3,"file":"icon.js","sourceRoot":"","sources":["../../../src/components/icon/icon.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\nimport { blazorInclude } from '../common/decorators/blazorInclude.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { styles } from './icon.material.css.js';\nimport {\n  IconsRegistry,\n  registerIcon as registerIcon_impl,\n  registerIconFromText as registerIconFromText_impl,\n} from './icon.registry.js';\n\n/**\n * Icon component\n *\n * @element igc-icon\n *\n *\n */\nexport default class IgcIconComponent extends SizableMixin(LitElement) {\n  public static readonly tagName = 'igc-icon';\n\n  public static override styles = styles;\n\n  @state() private svg = '';\n\n  /**\n   * The name of the icon glyph to draw.\n   * @attr\n   */\n  @property()\n  @alternateName('iconName')\n  public name = '';\n\n  /**\n   * The name of the registered collection for look up of icons.\n   * Defaults to `default`.\n   * @attr\n   */\n  @property()\n  public collection = 'default';\n\n  /**\n   * Whether to flip the icon. Useful for RTL layouts.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public mirrored = false;\n\n  constructor() {\n    super();\n    this.size = 'medium';\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'img');\n    }\n    IconsRegistry.instance().subscribe(this.iconLoaded);\n  }\n\n  public override disconnectedCallback() {\n    IconsRegistry.instance().unsubscribe(this.iconLoaded);\n    super.disconnectedCallback();\n  }\n\n  @watch('name')\n  @watch('collection')\n  protected iconChanged(prev: string, curr: string) {\n    if (prev !== curr) {\n      this.getIcon();\n    }\n  }\n\n  private iconLoaded = (name: string, collection: string) => {\n    if (this.name === name && this.collection === collection) {\n      this.getIcon();\n    }\n  };\n\n  private getIcon() {\n    const svg =\n      this.name && this.collection\n        ? IconsRegistry.instance().getIcon(this.name, this.collection)\n        : '';\n    this.svg = svg ?? '';\n  }\n\n  protected override render() {\n    return html` ${unsafeSVG(this.svg)} `;\n  }\n\n  @blazorInclude()\n  protected async registerIcon(\n    name: string,\n    url: string,\n    collection = 'default'\n  ) {\n    await registerIcon_impl(name, url, collection);\n  }\n\n  @blazorInclude()\n  protected registerIconFromText(\n    name: string,\n    iconText: string,\n    collection = 'default'\n  ) {\n    registerIconFromText_impl(name, iconText, collection);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-icon': IgcIconComponent;\n  }\n}\n"]}
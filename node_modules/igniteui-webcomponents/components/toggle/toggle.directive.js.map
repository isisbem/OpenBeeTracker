{"version":3,"file":"toggle.directive.js","sourceRoot":"","sources":["../../../src/components/toggle/toggle.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  computePosition,\n  flip,\n  offset,\n  shift,\n  size,\n  Middleware,\n} from '@floating-ui/dom';\nimport {\n  directive,\n  Directive,\n  PartInfo,\n  ElementPart,\n  PartType,\n} from 'lit/directive.js';\nimport { noChange } from 'lit';\nimport type { IgcToggleOptions } from './types.js';\nimport type { IgcToggleController } from './toggle.controller.js';\n\n/* blazorSuppressComponent */\nexport class IgcToggleDirective extends Directive {\n  private part: PartInfo;\n  private shiftOptions? = {\n    mainAxis: true,\n  };\n\n  private floatingElement!: HTMLElement;\n\n  private updatePosition(\n    target: HTMLElement,\n    options: IgcToggleOptions,\n    controller?: IgcToggleController\n  ) {\n    this.floatingElement = this.createFloatingElement(options.open);\n\n    if (!target) {\n      if (controller) {\n        controller.rendered = Promise.resolve();\n      }\n      return noChange;\n    }\n\n    const promise = computePosition(target, this.floatingElement, {\n      placement: options.placement ?? 'bottom-start',\n      strategy: options.positionStrategy ?? 'absolute',\n      middleware: this.createMiddleware(options),\n    }).then(({ x, y }) => {\n      Object.assign(this.floatingElement.style, {\n        left: 0,\n        top: 0,\n        transform: `translate(${x}px,${y}px)`,\n      });\n    });\n\n    if (controller) {\n      controller.rendered = promise;\n    }\n\n    return noChange;\n  }\n\n  private createFloatingElement(open = false) {\n    if (!this.floatingElement) {\n      this.floatingElement = (this.part as ElementPart).element as HTMLElement;\n    }\n\n    this.floatingElement.style.display = open ? '' : 'none';\n\n    return this.floatingElement;\n  }\n\n  private createMiddleware(options: IgcToggleOptions) {\n    const middleware: Middleware[] = [];\n\n    if (options.distance) {\n      middleware.push(\n        offset({\n          mainAxis: options.distance,\n        })\n      );\n    }\n\n    if (options.flip) {\n      middleware.push(flip());\n    }\n\n    if (this.shiftOptions) {\n      middleware.push(shift(this.shiftOptions));\n    }\n\n    // Toggling `sameWidth` does not reset the applied style on the floater element\n    Object.assign(this.floatingElement.style, { width: '' });\n\n    if (options.sameWidth) {\n      const floatingElement = this.floatingElement;\n      middleware.push(\n        size({\n          apply: (args) => {\n            const { rects } = args;\n            Object.assign(floatingElement.style, {\n              width: `${rects.reference.width}px`,\n            });\n          },\n        })\n      );\n    }\n\n    return middleware;\n  }\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    this.part = partInfo;\n    if (partInfo.type !== PartType.ELEMENT) {\n      throw new Error(\n        'The `igcToggle` directive must be attached to an element tag.'\n      );\n    }\n  }\n\n  public render(\n    target: HTMLElement,\n    options: IgcToggleOptions,\n    controller?: IgcToggleController\n  ) {\n    return this.updatePosition(target, options, controller);\n  }\n}\n\nexport const igcToggle = directive(IgcToggleDirective);\n"]}
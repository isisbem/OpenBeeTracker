import { css } from 'lit';
export const styles = css `/* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */
:host([size=large]) {
  --component-size: var(--ig-size, var(--ig-size-large));
}

:host([size=medium]) {
  --component-size: var(--ig-size, var(--ig-size-medium));
}

:host([size=small]) {
  --component-size: var(--ig-size, var(--ig-size-small));
}

:host {
  --size: max(var(--is-large, 1) * max(3rem, -1 * 3rem), var(--is-medium, 1) * max(2.5rem, -1 * 2.5rem), var(--is-small, 1) * max(2rem, -1 * 2rem));
}
:host [part=prefix],
:host [part=suffix] {
  color: hsla(var(--ig-gray-700), var(--ig-gray-a));
  background: hsla(var(--ig-gray-100), var(--ig-gray-a));
  font-size: 0.875rem;
  cursor: default;
}
:host [name=prefix]::slotted(*),
:host [name=suffix]::slotted(*) {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  height: 100%;
  padding-inline: max(var(--is-large, 1) * max(16px, -1 * 16px) * var(--ig-spacing-inline-large, var(--ig-spacing-inline, --ig-spacing)), var(--is-medium, 1) * max(12px, -1 * 12px) * var(--ig-spacing-inline-medium, var(--ig-spacing-inline, --ig-spacing)), var(--is-small, 1) * max(8px, -1 * 8px) * var(--ig-spacing-inline-small, var(--ig-spacing-inline, --ig-spacing)));
}
:host [part=prefix] {
  grid-area: 1/1;
}
:host [part=suffix] {
  grid-area: 1/3;
}
:host [part=label] {
  font-size: 0.875rem;
  font-weight: 600;
  color: hsla(var(--ig-gray-900), var(--ig-gray-a));
}
:host [part^=container] {
  border-radius: clamp(0rem, calc(var(--ig-radius-factor) * 2px), 2px);
  border: 0.0625rem solid hsla(var(--ig-gray-500), var(--ig-gray-a));
  -webkit-transition: none;
  -o-transition: none;
  transition: none;
  background: var(--container-background, hsla(var(--ig-surface-500), var(--ig-surface-a)));
  cursor: text;
  grid-template-columns: auto 1fr auto;
  overflow: hidden;
  height: var(--size);
}
:host [part^=container]::after {
  background: transparent;
  -webkit-transform: none;
      -ms-transform: none;
          transform: none;
  height: initial;
}
:host [part~=input] {
  height: calc(var(--size) - 0.125rem);
  background: initial;
  font-size: 0.875rem;
  padding: 0.5rem;
  max-height: 100%;
  border: none;
  grid-area: 1/2;
}
:host [part=helper-text] {
  padding: 0;
  margin-top: 0.3125rem;
  color: hsla(var(--ig-gray-700), var(--ig-gray-a));
}

:host(:not([invalid]):hover) [part^=container] {
  border-color: hsla(var(--ig-gray-700), var(--ig-gray-a));
}

:host(:focus-within) [part^=container] {
  border-width: 0.125rem;
}
:host(:focus-within) [part~=input] {
  height: calc(var(--size) - 0.25rem);
}
:host(:focus-within) [part=prefix] {
  -webkit-margin-start: -0.0625rem;
          margin-inline-start: -0.0625rem;
}
:host(:focus-within) [part=suffix] {
  -webkit-margin-end: -0.0625rem;
          margin-inline-end: -0.0625rem;
}
:host(:focus-within) [name=prefix]::slotted(*),
:host(:focus-within) [name=suffix]::slotted(*) {
  padding-block: max(var(--is-large, 1) * max(10px, -1 * 10px) * var(--ig-spacing-block-large, var(--ig-spacing-block, --ig-spacing)), var(--is-medium, 1) * max(8px, -1 * 8px) * var(--ig-spacing-block-medium, var(--ig-spacing-block, --ig-spacing)), var(--is-small, 1) * max(6px, -1 * 6px) * var(--ig-spacing-block-small, var(--ig-spacing-block, --ig-spacing)));
}

:host(:not([invalid]):focus-within) [part^=container],
:host(:not([invalid]):focus-within:hover) [part^=container] {
  border-color: hsla(var(--ig-primary-500), var(--ig-primary-a));
}

:host([required]) [part=label]::after,
:host([outlined][required]) [part=label]::after {
  color: hsla(var(--ig-error-500), var(--ig-error-a));
}

:host([invalid]) [part^=container],
:host([outlined][invalid]) [part^=container] {
  border-color: hsla(var(--ig-error-500), var(--ig-error-a));
}

:host([disabled][outlined][invalid]) [part^=container] {
  border-color: hsla(var(--ig-gray-100), var(--ig-gray-a));
}

:host([disabled]) {
  pointer-events: none;
}
:host([disabled]) [part^=container] {
  border-color: hsla(var(--ig-gray-100), var(--ig-gray-a));
  color: hsla(var(--ig-gray-400), var(--ig-gray-a));
}
:host([disabled]) [part^=container],
:host([disabled]) [part=prefix],
:host([disabled]) [part=suffix] {
  background: hsla(var(--ig-gray-100), var(--ig-gray-a));
}
:host([disabled]) [part~=input]::-webkit-input-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}
:host([disabled]) [part~=input]::-moz-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}
:host([disabled]) [part~=input]:-ms-input-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}
:host([disabled]) [part~=input]::-ms-input-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}
:host([disabled]) [part=prefix],
:host([disabled]) [part=suffix],
:host([disabled]) [part=label],
:host([disabled]) [part=label]::after,
:host([disabled]) [part=helper-text],
:host([disabled]) [part~=input],
:host([disabled]) [part~=input]::placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}`;
//# sourceMappingURL=input.fluent.css.js.map
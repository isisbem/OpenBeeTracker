{"version":3,"file":"dropdown.js","sourceRoot":"","sources":["../../../src/components/dropdown/dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { IgcToggleController } from '../toggle/toggle.controller.js';\nimport type {\n  IgcPlacement,\n  IgcToggleComponent,\n  IgcToggleEventMap,\n} from '../toggle/types';\nimport { styles } from './themes/light/dropdown.base.css.js';\nimport { styles as bootstrap } from './themes/light/dropdown.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/dropdown.fluent.css.js';\nimport { styles as indigo } from './themes/light/dropdown.indigo.css.js';\n\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcDropdownGroupComponent from './dropdown-group.js';\nimport IgcDropdownHeaderComponent from './dropdown-header.js';\nimport IgcDropdownItemComponent from './dropdown-item.js';\n\ndefineComponents(\n  IgcDropdownGroupComponent,\n  IgcDropdownHeaderComponent,\n  IgcDropdownItemComponent\n);\n\nexport interface IgcDropdownEventMap extends IgcToggleEventMap {\n  igcChange: CustomEvent<IgcDropdownItemComponent>;\n}\n\n/**\n * Represents a DropDown component.\n *\n * @element igc-dropdown\n *\n * @fires igcChange - Emitted when the selected item changes.\n * @fires igcOpening - Emitted just before the dropdown is open.\n * @fires igcOpened - Emitted after the dropdown is open.\n * @fires igcClosing - Emitter just before the dropdown is closed.\n * @fires igcClosed - Emitted after closing the dropdown.\n *\n * @slot target - Renders the dropdown's target element.\n * @slot - Renders the dropdown list items.\n *\n * @csspart base - The dropdown list wrapper.\n * @csspart list - The dropdown list.\n */\n@themes({ bootstrap, fluent, indigo })\n@blazorAdditionalDependencies(\n  'IgcDropdownItemComponent, IgcDropdownHeaderComponent, IgcDropdownGroupComponent'\n)\nexport default class IgcDropdownComponent\n  extends SizableMixin(\n    EventEmitterMixin<IgcDropdownEventMap, Constructor<LitElement>>(LitElement)\n  )\n  implements IgcToggleComponent\n{\n  /** @private */\n  public static readonly tagName: string = 'igc-dropdown';\n\n  public static styles = styles;\n\n  protected toggleController!: IgcToggleController;\n  protected selectedItem!: IgcDropdownItemComponent | null;\n\n  @state()\n  protected activeItem!: IgcDropdownItemComponent;\n\n  protected target!: HTMLElement;\n\n  private readonly keyDownHandlers: Map<string, Function> = new Map(\n    Object.entries({\n      Escape: this.onEscapeKey,\n      Enter: this.onEnterKey,\n      ArrowUp: this.onArrowUpKeyDown,\n      ArrowDown: this.onArrowDownKeyDown,\n      ArrowLeft: this.onArrowUpKeyDown,\n      ArrowRight: this.onArrowDownKeyDown,\n      Home: this.onHomeKey,\n      End: this.onEndKey,\n    })\n  );\n\n  protected get allItems() {\n    return [...this.items, ...this.groups.flatMap((group) => group.items)];\n  }\n\n  @queryAssignedElements({ slot: 'target' })\n  private targetNodes!: Array<HTMLElement>;\n\n  @query('[part=\"base\"]')\n  protected content!: HTMLElement;\n\n  @query('[part=\"list\"]')\n  protected scrollContainer!: HTMLElement;\n\n  @queryAssignedElements({ flatten: true, selector: 'igc-dropdown-item' })\n  protected items!: Array<IgcDropdownItemComponent>;\n\n  @queryAssignedElements({ flatten: true, selector: 'igc-dropdown-group' })\n  protected groups!: Array<IgcDropdownGroupComponent>;\n\n  /**\n   * Whether the dropdown should be kept open on selection.\n   * @attr keep-open-on-select\n   */\n  @property({ type: Boolean, attribute: 'keep-open-on-select' })\n  public keepOpenOnSelect = false;\n\n  /**\n   * Sets the open state of the component.\n   * @attr\n   */\n  @property({ type: Boolean })\n  public open = false;\n\n  /** The preferred placement of the component around the target element.\n   * @type {\"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"right\" | \"right-start\" | \"right-end\" | \"left\" | \"left-start\" | \"left-end\"}\n   * @attr\n   */\n  @property()\n  public placement: IgcPlacement = 'bottom-start';\n\n  /**\n   * Sets the component's positioning strategy.\n   * @attr position-strategy\n   */\n  @property({ attribute: 'position-strategy' })\n  public positionStrategy: 'absolute' | 'fixed' = 'absolute';\n\n  /**\n   * Determines the behavior of the component during scrolling the container.\n   * @attr scroll-strategy\n   */\n  @property({ attribute: 'scroll-strategy' })\n  public scrollStrategy: 'scroll' | 'block' | 'close' = 'scroll';\n\n  /**\n   * Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\n   * When true, once enough space is detected on its preferred side, it will flip back.\n   * @attr\n   */\n  @property({ type: Boolean })\n  public flip = false;\n\n  /**\n   * The distance from the target element.\n   * @attr\n   */\n  @property({ type: Number })\n  public distance = 0;\n\n  /**\n   * Whether the component should be kept open on clicking outside of it.\n   * @attr keep-open-on-outside-click\n   */\n  @property({ type: Boolean, attribute: 'keep-open-on-outside-click' })\n  public keepOpenOnOutsideClick = false;\n\n  /**\n   * Whether the dropdown's width should be the same as the target's one.\n   * @attr same-width\n   */\n  @property({ type: Boolean, attribute: 'same-width' })\n  public sameWidth = false;\n\n  @watch('open')\n  protected toggleDirectiveChange() {\n    if (!this.target) return;\n    this.toggleController.target = this.target;\n\n    if (this.open) {\n      document.addEventListener('keydown', this.handleKeyDown);\n      this.target.addEventListener('focusout', this.handleFocusout);\n      this.selectedItem = this.allItems.find((i) => i.selected) ?? null;\n    } else {\n      document.removeEventListener('keydown', this.handleKeyDown);\n      this.target.removeEventListener('focusout', this.handleFocusout);\n    }\n\n    this.target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n  }\n\n  @watch('placement')\n  @watch('flip')\n  @watch('positionStrategy')\n  @watch('closeOnOutsideClick')\n  @watch('distance')\n  @watch('sameWidth')\n  protected updateOptions() {\n    if (!this.toggleController) return;\n\n    this.toggleController.update();\n  }\n\n  @watch('size')\n  protected sizeChange() {\n    this.groups.forEach((g) => g.requestUpdate());\n  }\n\n  constructor() {\n    super();\n    this.toggleController = new IgcToggleController(this, {\n      target: this.target,\n      closeCallback: () => this._hide(),\n    });\n  }\n\n  public override async firstUpdated() {\n    if (this.targetNodes.length) {\n      this.target = this.targetNodes[0];\n      this.target.setAttribute('aria-haspopup', 'listbox');\n    }\n\n    await this.updateComplete;\n    this.setInitialSelection();\n  }\n\n  protected override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this.toggleController.rendered;\n    return result;\n  }\n\n  protected setInitialSelection() {\n    const item = this.allItems.filter((item) => item.selected).at(-1);\n    this.allItems.forEach((item) => (item.selected = false));\n    if (item) {\n      this.selectItem(item, false);\n    }\n  }\n\n  protected handleKeyDown = (event: KeyboardEvent) => {\n    const path = event.composedPath();\n    if (!(path.includes(this.target) || path.includes(this.content))) return;\n\n    if (this.keyDownHandlers.has(event.key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.keyDownHandlers.get(event.key)?.call(this);\n    }\n  };\n\n  protected onHomeKey() {\n    this.navigateTo(\n      this.allItems.filter((item) => !item.disabled).at(0)!.value\n    );\n  }\n\n  protected onEndKey() {\n    this.navigateTo(\n      this.allItems.filter((item) => !item.disabled).at(-1)!.value\n    );\n  }\n\n  protected onEscapeKey() {\n    this._hide();\n  }\n\n  protected onEnterKey() {\n    this.selectItem(this.activeItem);\n  }\n\n  protected handleClick(event: MouseEvent) {\n    const item = event\n      .composedPath()\n      .find(\n        (e) => e instanceof IgcDropdownItemComponent\n      ) as IgcDropdownItemComponent;\n\n    if (!item || item.disabled) return;\n\n    this.selectItem(item);\n  }\n\n  protected handleTargetClick = async () => {\n    if (!this.open) {\n      if (!this.handleOpening()) return;\n      this.show();\n      await this.updateComplete;\n      this.emitEvent('igcOpened');\n    } else {\n      this._hide();\n    }\n  };\n\n  protected handleOpening() {\n    const args = { cancelable: true };\n    return this.emitEvent('igcOpening', args);\n  }\n\n  protected handleClosing(): boolean {\n    const args = { cancelable: true };\n    return this.emitEvent('igcClosing', args);\n  }\n\n  protected handleChange(item: IgcDropdownItemComponent) {\n    const args = { detail: item };\n    this.emitEvent('igcChange', args);\n  }\n\n  protected handleSlotChange() {\n    if (!this.target) return;\n    this.target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n  }\n\n  protected handleFocusout(event: Event) {\n    event.preventDefault();\n    (event.target as HTMLElement).focus();\n  }\n\n  protected getItem(value: string) {\n    let itemIndex = -1;\n    let item!: IgcDropdownItemComponent;\n    this.allItems.find((i, index) => {\n      if (i.value === value) {\n        item = i;\n        itemIndex = index;\n      }\n    });\n    return { item: item, index: itemIndex };\n  }\n\n  protected activateItem(value: IgcDropdownItemComponent) {\n    if (!value) return;\n\n    if (this.activeItem) {\n      this.activeItem.active = false;\n    }\n\n    this.activeItem = value;\n    this.activeItem.active = true;\n  }\n\n  protected selectItem(\n    item: IgcDropdownItemComponent,\n    emit = true\n  ): IgcDropdownItemComponent | null {\n    if (!item) return null;\n\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n    }\n\n    this.activateItem(item);\n    this.selectedItem = item;\n    this.selectedItem.selected = true;\n    if (emit) this.handleChange(this.selectedItem);\n    if (emit && !this.keepOpenOnSelect) this._hide();\n\n    return this.selectedItem;\n  }\n\n  protected navigate(direction: -1 | 1, currentIndex?: number) {\n    let index = -1;\n    if (this.activeItem) {\n      index = currentIndex\n        ? currentIndex\n        : [...this.allItems].indexOf(this.activeItem) ?? index;\n    }\n\n    const newIndex = this.getNearestSiblingFocusableItemIndex(index, direction);\n    this.navigateItem(newIndex);\n  }\n\n  private navigateItem(newIndex: number): IgcDropdownItemComponent | null {\n    if (!this.allItems) {\n      return null;\n    }\n\n    if (newIndex < 0 || newIndex >= this.allItems.length) {\n      return null;\n    }\n\n    const newItem = this.allItems[newIndex];\n\n    this.activateItem(newItem);\n    this.scrollToHiddenItem(newItem);\n\n    return newItem;\n  }\n\n  private scrollToHiddenItem(newItem: IgcDropdownItemComponent) {\n    const elementRect = newItem.getBoundingClientRect();\n    const parentRect = this.content.getBoundingClientRect();\n    if (parentRect.top > elementRect.top) {\n      this.content.scrollTop -= parentRect.top - elementRect.top;\n    }\n\n    if (parentRect.bottom < elementRect.bottom) {\n      this.content.scrollTop += elementRect.bottom - parentRect.bottom;\n    }\n  }\n\n  protected getNearestSiblingFocusableItemIndex(\n    startIndex: number,\n    direction: -1 | 1\n  ): number {\n    let index = startIndex;\n    const items = this.allItems;\n    if (!items) {\n      return -1;\n    }\n\n    while (items[index + direction] && items[index + direction].disabled) {\n      index += direction;\n    }\n\n    index += direction;\n\n    return index > -1 && index < items.length ? index : -1;\n  }\n\n  private navigateNext() {\n    this.navigate(1);\n  }\n\n  private navigatePrev() {\n    this.navigate(-1);\n  }\n\n  protected onArrowDownKeyDown() {\n    this.navigateNext();\n  }\n\n  protected onArrowUpKeyDown() {\n    this.navigatePrev();\n  }\n\n  private async _hide(emit = true) {\n    if (!this.open) return;\n    if (emit && !this.handleClosing()) return;\n\n    this.open = false;\n\n    if (emit) {\n      await this.updateComplete;\n      this.emitEvent('igcClosed');\n    }\n  }\n\n  /** Shows the dropdown. */\n  @blazorSuppress()\n  public show(target?: HTMLElement) {\n    if (this.open && !target) return;\n\n    if (target) this.target = target;\n\n    this.open = true;\n  }\n\n  /** Hides the dropdown. */\n  public hide(): void {\n    this._hide(false);\n  }\n\n  /** Toggles the open state of the dropdown. */\n  @blazorSuppress()\n  public toggle(target?: HTMLElement): void {\n    this.open ? this.hide() : this.show(target);\n  }\n\n  /** Navigates to the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(value: string): IgcDropdownItemComponent | null;\n  /** Navigates to the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(index: number): IgcDropdownItemComponent | null;\n  /** Navigates to the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public navigateTo(value: string | number): IgcDropdownItemComponent | null {\n    const index =\n      typeof value === 'string' ? this.getItem(value).index : (value as number);\n\n    return this.navigateItem(index);\n  }\n\n  /** Selects the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public select(value: string): IgcDropdownItemComponent | null;\n  /** Selects the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public select(index: number): IgcDropdownItemComponent | null;\n  /** Selects the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public select(value: string | number): IgcDropdownItemComponent | null {\n    const item =\n      typeof value === 'string'\n        ? this.getItem(value).item\n        : this.allItems[value as number];\n\n    return this.selectItem(item, false);\n  }\n\n  /**  Clears the current selection of the dropdown. */\n  public clearSelection() {\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n    }\n    this.selectedItem = null;\n  }\n\n  protected override render() {\n    return html`\n      <slot\n        id=\"igcDDLTarget\"\n        name=\"target\"\n        @click=${this.handleTargetClick}\n        @slotchange=${this.handleSlotChange}\n      >\n      </slot>\n      <div\n        part=\"base\"\n        style=${styleMap({ position: this.positionStrategy })}\n        @click=${this.handleClick}\n        ${this.toggleController.toggleDirective}\n      >\n        <div role=\"listbox\" part=\"list\" aria-labelledby=\"igcDDLTarget\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-dropdown': IgcDropdownComponent;\n  }\n}\n"]}
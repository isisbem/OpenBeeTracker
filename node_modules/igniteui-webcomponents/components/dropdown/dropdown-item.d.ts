import { LitElement } from 'lit';
/**
 * Represents an item in a dropdown list.
 *
 * @element igc-dropdown-item
 *
 * @slot prefix - Renders content before the item's main content.
 * @slot - Renders the item's main content.
 * @slot suffix - Renders content after the item's main content.
 *
 * @csspart prefix - The prefix wrapper.
 * @csspart content - The main content wrapper.
 * @csspart suffix - The suffix wrapper.
 */
export default class IgcDropdownItemComponent extends LitElement {
    static readonly tagName: string;
    static styles: import("lit").CSSResult;
    private _value;
    /**
     * Ð¢he current value of the item.
     * If not specified, the element's text content is used.
     * @attr
     */
    get value(): string;
    set value(value: string);
    /**
     * Determines whether the item is selected.
     * @attr
     */
    selected: boolean;
    /**
     * Determines whether the item is active.
     * @attr
     */
    active: boolean;
    /**
     * Determines whether the item is disabled.
     * @attr
     */
    disabled: boolean;
    protected selectedChange(): void;
    protected disabledChange(): void;
    connectedCallback(): void;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-dropdown-item': IgcDropdownItemComponent;
    }
}

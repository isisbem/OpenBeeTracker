import { html, LitElement } from 'lit';
import { styles } from './ripple.material.css.js';
export default class IgcRippleComponent extends LitElement {
    constructor() {
        super();
        this.handler = ({ clientX, clientY }) => {
            var _a;
            const element = document.createElement('span');
            const { radius, top, left } = this.getDimensions(clientX, clientY);
            const styles = {
                position: 'absolute',
                display: 'block',
                pointerEvents: 'none',
                transformOrigin: 'center',
                transform: `translate3d(0, 0, 0) scale(0)`,
                willChange: 'opacity, transform',
                margin: `0 !important`,
                border: 'none !important',
                width: `${radius}px`,
                height: `${radius}px`,
                borderRadius: '50%',
                top: `${top}px`,
                left: `${left}px`,
                background: 'var(--color, hsl(var(--ig-gray-800)))',
            };
            const frames = [
                { opacity: 0.5, transform: 'scale(.3)' },
                { opacity: 0, transform: 'scale(2)' },
            ];
            const opts = {
                duration: 600,
                fill: 'forwards',
                easing: 'linear',
            };
            Object.assign(element.style, styles);
            (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.appendChild(element);
            element.animate(frames, opts).finished.then(() => element.remove());
        };
        this.addEventListener('mousedown', this.handler);
    }
    getDimensions(x, y) {
        const { width, height, left, top } = this.getBoundingClientRect();
        const radius = Math.max(width, height);
        const _left = Math.round(x - left - radius / 2);
        const _top = Math.round(y - top - radius / 2);
        return { radius, top: _top, left: _left };
    }
    render() {
        return html `<div></div>`;
    }
}
IgcRippleComponent.tagName = 'igc-ripple';
IgcRippleComponent.styles = styles;
//# sourceMappingURL=ripple.js.map
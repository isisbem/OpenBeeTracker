import GroupDataOperation from '../operations/group.js';
import FilterDataOperation from '../operations/filter.js';
export class DataController {
    constructor(host) {
        this.host = host;
        this.grouping = new GroupDataOperation();
        this.filtering = new FilterDataOperation();
        this._searchTerm = '';
        this.host.addController(this);
    }
    set searchTerm(value) {
        this._searchTerm = value;
        this.host.requestUpdate('pipeline');
    }
    get searchTerm() {
        return this._searchTerm;
    }
    get filteringOptions() {
        return this.host.filteringOptions;
    }
    get groupingOptions() {
        return {
            valueKey: this.host.valueKey,
            displayKey: this.host.displayKey,
            groupKey: this.host.groupKey,
            direction: this.host.groupSorting,
        };
    }
    index(data) {
        return data.map((item, index) => ({ ...item, dataIndex: index }));
    }
    hostConnected() { }
    async apply(data) {
        data = this.index(data);
        data = this.filtering.apply(data, this);
        data = this.grouping.apply(data, this);
        return data;
    }
}
//# sourceMappingURL=data.js.map
{"version":3,"file":"data.js","sourceRoot":"","sources":["../../../../src/components/combo/controllers/data.ts"],"names":[],"mappings":"AACA,OAAO,kBAAkB,MAAM,wBAAwB,CAAC;AACxD,OAAO,mBAAmB,MAAM,yBAAyB,CAAC;AAQ1D,MAAM,OAAO,cAAc;IAKzB,YAAsB,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAJ9B,aAAQ,GAAG,IAAI,kBAAkB,EAAK,CAAC;QACvC,cAAS,GAAG,IAAI,mBAAmB,EAAK,CAAC;QAC3C,gBAAW,GAAG,EAAE,CAAC;QAGvB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,IAAW,UAAU,CAAC,KAAa;QACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,IAAW,gBAAgB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;IACpC,CAAC;IAED,IAAW,eAAe;QACxB,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;YAChC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;SAClC,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,IAAS;QACrB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IAEM,aAAa,KAAI,CAAC;IAElB,KAAK,CAAC,KAAK,CAAC,IAAS;QAC1B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEvC,OAAO,IAAwB,CAAC;IAClC,CAAC;CACF","sourcesContent":["import { ReactiveController } from 'lit';\nimport GroupDataOperation from '../operations/group.js';\nimport FilterDataOperation from '../operations/filter.js';\nimport {\n  ComboHost,\n  ComboRecord,\n  FilteringOptions,\n  GroupingOptions,\n} from '../types.js';\n\nexport class DataController<T extends object> implements ReactiveController {\n  protected grouping = new GroupDataOperation<T>();\n  protected filtering = new FilterDataOperation<T>();\n  private _searchTerm = '';\n\n  constructor(protected host: ComboHost<T>) {\n    this.host.addController(this);\n  }\n\n  public set searchTerm(value: string) {\n    this._searchTerm = value;\n    this.host.requestUpdate('pipeline');\n  }\n\n  public get searchTerm() {\n    return this._searchTerm;\n  }\n\n  public get filteringOptions(): FilteringOptions<T> {\n    return this.host.filteringOptions;\n  }\n\n  public get groupingOptions(): GroupingOptions<T> {\n    return {\n      valueKey: this.host.valueKey,\n      displayKey: this.host.displayKey,\n      groupKey: this.host.groupKey,\n      direction: this.host.groupSorting,\n    };\n  }\n\n  private index(data: T[]) {\n    return data.map((item, index) => ({ ...item, dataIndex: index }));\n  }\n\n  public hostConnected() {}\n\n  public async apply(data: T[]): Promise<ComboRecord<T>[]> {\n    data = this.index(data);\n    data = this.filtering.apply(data, this);\n    data = this.grouping.apply(data, this);\n\n    return data as ComboRecord<T>[];\n  }\n}\n"]}
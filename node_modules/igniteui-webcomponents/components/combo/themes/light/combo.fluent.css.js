import { css } from 'lit';
export const styles = css `/* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */ /* stylelint-disable max-line-length */
[part=helper-text] {
  margin-top: 0.3125rem;
}
[part=helper-text] ::slotted([slot=helper-text]) {
  color: hsla(var(--ig-gray-700), var(--ig-gray-a));
}

:host {
  --size: max(var(--is-large, 1) * max(3rem, -1 * 3rem), var(--is-medium, 1) * max(2.5rem, -1 * 2.5rem), var(--is-small, 1) * max(2rem, -1 * 2rem));
}

:host(:focus-within) igc-input[readonly]:not([disabled])::part(container) {
  border-width: 0.125rem;
}

:host(:not([invalid]):focus-within) igc-input[readonly]:not([disabled])::part(container) {
  border-color: hsla(var(--ig-primary-500), var(--ig-primary-a));
  border-width: 0.125rem;
}
:host(:not([invalid]):focus-within) igc-input[readonly]:not([disabled])::part(prefix) {
  -webkit-margin-start: -0.0625rem;
          margin-inline-start: -0.0625rem;
}
:host(:not([invalid]):focus-within) igc-input[readonly]:not([disabled])::part(suffix) {
  -webkit-margin-end: -0.0625rem;
          margin-inline-end: -0.0625rem;
}
:host(:not([invalid]):focus-within) igc-input[readonly]:not([disabled])::part(input) {
  height: calc(var(--size) - 0.25rem);
}

:host([disabled]) [part=helper-text] ::slotted([slot=helper-text]) {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}

:host ::slotted([slot=helper-text]) {
  font-family: var(--ig-caption-font-family, var(--ig-font-family));
  font-size: var(--ig-caption-font-size);
  font-weight: var(--ig-caption-font-weight);
  font-style: var(--ig-caption-font-style);
  line-height: var(--ig-caption-line-height);
  letter-spacing: var(--ig-caption-letter-spacing);
  text-transform: var(--ig-caption-text-transform);
  margin-top: var(--ig-caption-margin-top);
  margin-bottom: var(--ig-caption-margin-bottom);
  display: block;
  padding: 0;
  margin-top: 0.3125rem;
  color: hsla(var(--ig-gray-700), var(--ig-gray-a));
}

:host([disabled]) igc-input::part(input)::-webkit-input-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}

:host([disabled]) igc-input::part(input)::-moz-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}

:host([disabled]) igc-input::part(input):-ms-input-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}

:host([disabled]) igc-input::part(input)::-ms-input-placeholder {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}

:host([disabled]) igc-input::part(label),
:host([disabled]) igc-input::part(input)::placeholder,
:host([disabled]) ::slotted([slot=helper-text]) {
  color: hsla(var(--ig-gray-500), var(--ig-gray-a));
}

:host([invalid]:focus-within) igc-input::part(input) {
  height: calc(var(--size) - 0.25rem);
}
:host([invalid]:focus-within) igc-input::part(suffix) {
  height: var(--size);
  -webkit-margin-end: -0.0625rem;
          margin-inline-end: -0.0625rem;
  -webkit-margin-before: -0.125rem;
          margin-block-start: -0.125rem;
}
:host([invalid]:focus-within) igc-input::part(prefix) {
  -webkit-margin-start: -0.0625rem;
          margin-inline-start: -0.0625rem;
  -webkit-margin-before: -0.125rem;
          margin-block-start: -0.125rem;
}

[part=filter-input] {
  padding: max(var(--is-large, 1) * max(8px, -1 * 8px) * var(--ig-spacing-large, var(--ig-spacing, --ig-spacing)), var(--is-medium, 1) * max(4px, -1 * 4px) * var(--ig-spacing-medium, var(--ig-spacing, --ig-spacing)), var(--is-small, 1) * max(2px, -1 * 2px) * var(--ig-spacing-small, var(--ig-spacing, --ig-spacing)));
}

[part=list-wrapper] igc-input::part(suffix) {
  background: transparent;
}
[part=list-wrapper] igc-input::part(input) {
  height: var(--size);
}`;
//# sourceMappingURL=combo.fluent.css.js.map
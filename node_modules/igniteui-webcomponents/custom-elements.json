{
  "version": "experimental",
  "tags": [
    {
      "name": "igc-accordion",
      "path": "./src/components/accordion/accordion.ts",
      "description": "The Accordion is a container-based component that can house multiple expansion panels\nand offers keyboard navigation.",
      "attributes": [
        {
          "name": "single-expand",
          "description": "Allows only one panel to be expanded at a time.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-accordion\"",
          "default": "\"igc-accordion\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "singleExpand",
          "attribute": "single-expand",
          "description": "Allows only one panel to be expanded at a time.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "panels",
          "description": "Returns all of the accordions's direct igc-expansion-panel children.",
          "type": "IgcExpansionPanelComponent[]"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the expansion panels inside default slot."
        }
      ]
    },
    {
      "name": "igc-avatar",
      "path": "./src/components/avatar/avatar.ts",
      "description": "An avatar component is used as a representation of a user identity\ntypically in a user profile.",
      "attributes": [
        {
          "name": "src",
          "description": "The image source to use.",
          "type": "string"
        },
        {
          "name": "alt",
          "description": "Alternative text for the image.",
          "type": "string"
        },
        {
          "name": "initials",
          "description": "Initials to use as a fallback when no image is available.",
          "type": "string"
        },
        {
          "name": "shape",
          "description": "The shape of the avatar.",
          "type": "\"circle\" | \"rounded\" | \"square\"",
          "default": "\"square\""
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"small\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-avatar\"",
          "default": "\"igc-avatar\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "The image source to use.",
          "type": "string"
        },
        {
          "name": "alt",
          "attribute": "alt",
          "description": "Alternative text for the image.",
          "type": "string"
        },
        {
          "name": "initials",
          "attribute": "initials",
          "description": "Initials to use as a fallback when no image is available.",
          "type": "string"
        },
        {
          "name": "shape",
          "attribute": "shape",
          "description": "The shape of the avatar.",
          "type": "\"circle\" | \"rounded\" | \"square\"",
          "default": "\"square\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"small\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders an icon inside the default slot."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the avatar."
        },
        {
          "name": "initials",
          "description": "The initials wrapper of the avatar."
        },
        {
          "name": "image",
          "description": "The image wrapper of the avatar."
        },
        {
          "name": "icon",
          "description": "The icon wrapper of the avatar."
        }
      ]
    },
    {
      "name": "igc-badge",
      "path": "./src/components/badge/badge.ts",
      "description": "The badge is a component indicating a status on a related item or an area\nwhere some active indication is required.",
      "attributes": [
        {
          "name": "variant",
          "description": "The type of badge.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
          "default": "\"primary\""
        },
        {
          "name": "outlined",
          "description": "Sets whether to draw an outlined version of the badge.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "shape",
          "description": "The shape of the badge.",
          "type": "\"rounded\" | \"square\"",
          "default": "\"rounded\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-badge\"",
          "default": "\"igc-badge\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The type of badge.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
          "default": "\"primary\""
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "Sets whether to draw an outlined version of the badge.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "shape",
          "attribute": "shape",
          "description": "The shape of the badge.",
          "type": "\"rounded\" | \"square\"",
          "default": "\"rounded\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default slot for the badge."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the badge."
        }
      ]
    },
    {
      "name": "igc-button",
      "path": "./src/components/button/button.ts",
      "description": "Represents a clickable button, used to submit forms or anywhere in a\ndocument for accessible, standard button functionality.",
      "attributes": [
        {
          "name": "variant",
          "description": "Sets the variant of the button.",
          "type": "\"flat\" | \"contained\" | \"outlined\" | \"fab\"",
          "default": "\"contained\""
        },
        {
          "name": "type",
          "description": "The type of the button. Defaults to undefined.",
          "type": "\"button\" | \"reset\" | \"submit\""
        },
        {
          "name": "href",
          "description": "The URL the button points to.",
          "type": "string"
        },
        {
          "name": "download",
          "description": "Prompts to save the linked URL instead of navigating to it.",
          "type": "string"
        },
        {
          "name": "target",
          "description": "Where to display the linked URL, as the name for a browsing context.",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
        },
        {
          "name": "rel",
          "description": "The relationship of the linked URL.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Determines whether the button is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "aria-label",
          "type": "string"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-button\"",
          "default": "\"igc-button\""
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Sets the variant of the button.",
          "type": "\"flat\" | \"contained\" | \"outlined\" | \"fab\"",
          "default": "\"contained\""
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "The type of the button. Defaults to undefined.",
          "type": "\"button\" | \"reset\" | \"submit\""
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "The URL the button points to.",
          "type": "string"
        },
        {
          "name": "download",
          "attribute": "download",
          "description": "Prompts to save the linked URL instead of navigating to it.",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Where to display the linked URL, as the name for a browsing context.",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
        },
        {
          "name": "rel",
          "attribute": "rel",
          "description": "The relationship of the linked URL.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Determines whether the button is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "type": "string"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "events": [
        {
          "name": "igcFocus",
          "description": "Emitted when the button gains focus."
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the button loses focus."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the label of the button."
        },
        {
          "name": "prefix",
          "description": "Renders content before the label of the button."
        },
        {
          "name": "suffix",
          "description": "Renders content after the label of the button."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The native button element."
        },
        {
          "name": "prefix",
          "description": "The prefix container."
        },
        {
          "name": "suffix",
          "description": "The suffix container."
        }
      ]
    },
    {
      "name": "igc-icon-button",
      "path": "./src/components/button/icon-button.ts",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the icon.",
          "type": "string"
        },
        {
          "name": "collection",
          "description": "The name of the icon collection.",
          "type": "string"
        },
        {
          "name": "mirrored",
          "description": "Whether to flip the icon button. Useful for RTL layouts.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "description": "The visual variant of the icon button.",
          "type": "\"flat\" | \"contained\" | \"outlined\"",
          "default": "\"contained\""
        },
        {
          "name": "type",
          "description": "The type of the button. Defaults to undefined.",
          "type": "\"button\" | \"reset\" | \"submit\""
        },
        {
          "name": "href",
          "description": "The URL the button points to.",
          "type": "string"
        },
        {
          "name": "download",
          "description": "Prompts to save the linked URL instead of navigating to it.",
          "type": "string"
        },
        {
          "name": "target",
          "description": "Where to display the linked URL, as the name for a browsing context.",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
        },
        {
          "name": "rel",
          "description": "The relationship of the linked URL.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Determines whether the button is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "aria-label",
          "type": "string"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-icon-button\"",
          "default": "\"igc-icon-button\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name of the icon.",
          "type": "string"
        },
        {
          "name": "collection",
          "attribute": "collection",
          "description": "The name of the icon collection.",
          "type": "string"
        },
        {
          "name": "mirrored",
          "attribute": "mirrored",
          "description": "Whether to flip the icon button. Useful for RTL layouts.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The visual variant of the icon button.",
          "type": "\"flat\" | \"contained\" | \"outlined\"",
          "default": "\"contained\""
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "The type of the button. Defaults to undefined.",
          "type": "\"button\" | \"reset\" | \"submit\""
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "The URL the button points to.",
          "type": "string"
        },
        {
          "name": "download",
          "attribute": "download",
          "description": "Prompts to save the linked URL instead of navigating to it.",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Where to display the linked URL, as the name for a browsing context.",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | undefined"
        },
        {
          "name": "rel",
          "attribute": "rel",
          "description": "The relationship of the linked URL.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Determines whether the button is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "type": "string"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The wrapping element."
        },
        {
          "name": "icon",
          "description": "The icon element."
        }
      ]
    },
    {
      "name": "igc-calendar",
      "path": "./src/components/calendar/calendar.ts",
      "description": "Represents a calendar that lets users\nto select a date value in a variety of different ways.",
      "attributes": [
        {
          "name": "hide-outside-days",
          "description": "Controls the visibility of the dates that do not belong to the current month.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-header",
          "description": "Determines whether the calendar hides its header. Even if set to false, the header is not displayed for `multiple` selection.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "header-orientation",
          "description": "The orientation of the header.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        },
        {
          "name": "orientation",
          "description": "The orientation of the multiple months displayed in days view.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        },
        {
          "name": "visible-months",
          "description": "The number of months displayed in days view.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "active-view",
          "description": "The active view.",
          "type": "\"days\" | \"months\" | \"years\"",
          "default": "\"days\""
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        },
        {
          "name": "value",
          "description": "Тhe current value of the calendar.\nUsed when selection is set to single.",
          "type": "Date | undefined"
        },
        {
          "name": "values",
          "description": "Тhe current values of the calendar.\nUsed when selection is set to multiple or range.",
          "type": "Date[] | undefined"
        },
        {
          "name": "selection",
          "description": "Sets the type of date selection.",
          "type": "\"single\" | \"multiple\" | \"range\"",
          "default": "\"single\""
        },
        {
          "name": "show-week-numbers",
          "description": "Show/hide the week numbers.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "week-start",
          "description": "Sets the start day of the week.",
          "type": "\"sunday\" | \"monday\" | \"tuesday\" | \"wednesday\" | \"thursday\" | \"friday\" | \"saturday\"",
          "default": "\"sunday\""
        },
        {
          "name": "active-date",
          "description": "Sets the date which is shown in view and is highlighted. By default it is the current date.",
          "type": "Date"
        },
        {
          "name": "locale",
          "description": "Sets the locale used for formatting and displaying the dates in the calendar.",
          "type": "string",
          "default": "\"en\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "tagName",
          "type": "\"igc-calendar\"",
          "default": "\"igc-calendar\""
        },
        {
          "name": "hideOutsideDays",
          "attribute": "hide-outside-days",
          "description": "Controls the visibility of the dates that do not belong to the current month.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideHeader",
          "attribute": "hide-header",
          "description": "Determines whether the calendar hides its header. Even if set to false, the header is not displayed for `multiple` selection.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "headerOrientation",
          "attribute": "header-orientation",
          "description": "The orientation of the header.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        },
        {
          "name": "orientation",
          "attribute": "orientation",
          "description": "The orientation of the multiple months displayed in days view.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        },
        {
          "name": "visibleMonths",
          "attribute": "visible-months",
          "description": "The number of months displayed in days view.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "activeView",
          "attribute": "active-view",
          "description": "The active view.",
          "type": "\"days\" | \"months\" | \"years\"",
          "default": "\"days\""
        },
        {
          "name": "formatOptions",
          "description": "The options used to format the months and the weekdays in the calendar views.",
          "type": "Pick<DateTimeFormatOptions, \"month\" | \"weekday\">",
          "default": "{\"month\":\"long\",\"weekday\":\"narrow\"}"
        },
        {
          "name": "resourceStrings",
          "description": "The resource strings.",
          "type": "IgcCalendarResourceStrings",
          "default": "{\"selectMonth\":\"Select month\",\"selectYear\":\"Select year\",\"selectDate\":\"Select date\",\"selectRange\":\"Select range\",\"selectedDate\":\"Selected date\",\"startDate\":\"Start\",\"endDate\":\"End\",\"previousMonth\":\"Previous month\",\"nextMonth\":\"Next month\",\"previousYear\":\"Previous year\",\"nextYear\":\"Next year\",\"previousYears\":\"Previous {0} years\",\"nextYears\":\"Next {0} years\",\"weekLabel\":\"Wk\"}"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Тhe current value of the calendar.\nUsed when selection is set to single.",
          "type": "Date | undefined"
        },
        {
          "name": "values",
          "attribute": "values",
          "description": "Тhe current values of the calendar.\nUsed when selection is set to multiple or range.",
          "type": "Date[] | undefined"
        },
        {
          "name": "selection",
          "attribute": "selection",
          "description": "Sets the type of date selection.",
          "type": "\"single\" | \"multiple\" | \"range\"",
          "default": "\"single\""
        },
        {
          "name": "showWeekNumbers",
          "attribute": "show-week-numbers",
          "description": "Show/hide the week numbers.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "weekStart",
          "attribute": "week-start",
          "description": "Sets the start day of the week.",
          "type": "\"sunday\" | \"monday\" | \"tuesday\" | \"wednesday\" | \"thursday\" | \"friday\" | \"saturday\"",
          "default": "\"sunday\""
        },
        {
          "name": "activeDate",
          "attribute": "active-date",
          "description": "Sets the date which is shown in view and is highlighted. By default it is the current date.",
          "type": "Date"
        },
        {
          "name": "locale",
          "attribute": "locale",
          "description": "Sets the locale used for formatting and displaying the dates in the calendar.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "disabledDates",
          "description": "Gets/sets disabled dates.",
          "type": "DateRangeDescriptor[]"
        },
        {
          "name": "specialDates",
          "description": "Gets/sets special dates.",
          "type": "DateRangeDescriptor[]"
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when calendar changes its value."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The default slot for the calendar."
        },
        {
          "name": "title",
          "description": "Renders the title of the calendar header."
        }
      ],
      "cssParts": [
        {
          "name": "content",
          "description": "The content container."
        },
        {
          "name": "days-view",
          "description": "The days view container."
        },
        {
          "name": "months-view",
          "description": "The months view container."
        },
        {
          "name": "years-view",
          "description": "The years view container."
        },
        {
          "name": "header",
          "description": "The header container."
        },
        {
          "name": "header-title",
          "description": "The header title container."
        },
        {
          "name": "header-date",
          "description": "The header date container."
        },
        {
          "name": "navigation",
          "description": "The navigation container."
        },
        {
          "name": "months-navigation",
          "description": "The months navigation container."
        },
        {
          "name": "years-navigation",
          "description": "The years navigation container."
        },
        {
          "name": "years-range",
          "description": "The years range container."
        },
        {
          "name": "navigation-buttons",
          "description": "The navigation buttons container."
        },
        {
          "name": "navigation-button",
          "description": "The navigation button container."
        },
        {
          "name": "days-view-container",
          "description": "The days view container."
        }
      ]
    },
    {
      "name": "igc-days-view",
      "path": "./src/components/calendar/days-view/days-view.ts",
      "description": "Instantiate a days view as a separate component in the calendar.",
      "attributes": [
        {
          "name": "hide-leading-days",
          "description": "Controls the visibility of the leading dates that do not belong to the current month.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-trailing-days",
          "description": "Controls the visibility of the trailing dates that do not belong to the current month.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "description": "Gets/sets the active state of the days view.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "week-day-format",
          "description": "The format of the days. Defaults to narrow.",
          "type": "\"long\" | \"short\" | \"narrow\" | undefined",
          "default": "\"narrow\""
        },
        {
          "name": "value",
          "description": "Тhe current value of the calendar.\nUsed when selection is set to single.",
          "type": "Date | undefined"
        },
        {
          "name": "values",
          "description": "Тhe current values of the calendar.\nUsed when selection is set to multiple or range.",
          "type": "Date[] | undefined"
        },
        {
          "name": "selection",
          "description": "Sets the type of date selection.",
          "type": "\"single\" | \"multiple\" | \"range\"",
          "default": "\"single\""
        },
        {
          "name": "show-week-numbers",
          "description": "Show/hide the week numbers.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "week-start",
          "description": "Sets the start day of the week.",
          "type": "\"sunday\" | \"monday\" | \"tuesday\" | \"wednesday\" | \"thursday\" | \"friday\" | \"saturday\"",
          "default": "\"sunday\""
        },
        {
          "name": "active-date",
          "description": "Sets the date which is shown in view and is highlighted. By default it is the current date.",
          "type": "Date"
        },
        {
          "name": "locale",
          "description": "Sets the locale used for formatting and displaying the dates in the calendar.",
          "type": "string",
          "default": "\"en\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-days-view\"",
          "default": "\"igc-days-view\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "hideLeadingDays",
          "attribute": "hide-leading-days",
          "description": "Controls the visibility of the leading dates that do not belong to the current month.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideTrailingDays",
          "attribute": "hide-trailing-days",
          "description": "Controls the visibility of the trailing dates that do not belong to the current month.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "Gets/sets the active state of the days view.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "rangePreviewDate",
          "description": "The range preview date.",
          "type": "Date | undefined"
        },
        {
          "name": "weekDayFormat",
          "attribute": "week-day-format",
          "description": "The format of the days. Defaults to narrow.",
          "type": "\"long\" | \"short\" | \"narrow\" | undefined",
          "default": "\"narrow\""
        },
        {
          "name": "resourceStrings",
          "description": "The resource strings.",
          "type": "IgcCalendarResourceStrings",
          "default": "{\"selectMonth\":\"Select month\",\"selectYear\":\"Select year\",\"selectDate\":\"Select date\",\"selectRange\":\"Select range\",\"selectedDate\":\"Selected date\",\"startDate\":\"Start\",\"endDate\":\"End\",\"previousMonth\":\"Previous month\",\"nextMonth\":\"Next month\",\"previousYear\":\"Previous year\",\"nextYear\":\"Next year\",\"previousYears\":\"Previous {0} years\",\"nextYears\":\"Next {0} years\",\"weekLabel\":\"Wk\"}"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Тhe current value of the calendar.\nUsed when selection is set to single.",
          "type": "Date | undefined"
        },
        {
          "name": "values",
          "attribute": "values",
          "description": "Тhe current values of the calendar.\nUsed when selection is set to multiple or range.",
          "type": "Date[] | undefined"
        },
        {
          "name": "selection",
          "attribute": "selection",
          "description": "Sets the type of date selection.",
          "type": "\"single\" | \"multiple\" | \"range\"",
          "default": "\"single\""
        },
        {
          "name": "showWeekNumbers",
          "attribute": "show-week-numbers",
          "description": "Show/hide the week numbers.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "weekStart",
          "attribute": "week-start",
          "description": "Sets the start day of the week.",
          "type": "\"sunday\" | \"monday\" | \"tuesday\" | \"wednesday\" | \"thursday\" | \"friday\" | \"saturday\"",
          "default": "\"sunday\""
        },
        {
          "name": "activeDate",
          "attribute": "active-date",
          "description": "Sets the date which is shown in view and is highlighted. By default it is the current date.",
          "type": "Date"
        },
        {
          "name": "locale",
          "attribute": "locale",
          "description": "Sets the locale used for formatting and displaying the dates in the calendar.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "disabledDates",
          "description": "Gets/sets disabled dates.",
          "type": "DateRangeDescriptor[]"
        },
        {
          "name": "specialDates",
          "description": "Gets/sets special dates.",
          "type": "DateRangeDescriptor[]"
        }
      ],
      "events": [
        {
          "name": "igcActiveDateChange",
          "description": "Emitted when the active date changes."
        },
        {
          "name": "igcRangePreviewDateChange",
          "description": "Emitted when the range preview date changes."
        }
      ],
      "cssParts": [
        {
          "name": "days-row",
          "description": "The days row container."
        },
        {
          "name": "label",
          "description": "The label container."
        },
        {
          "name": "label-inner",
          "description": "The inner label container."
        },
        {
          "name": "week-number",
          "description": "The week number container."
        },
        {
          "name": "week-number-inner",
          "description": "The inner week number container."
        }
      ]
    },
    {
      "name": "igc-months-view",
      "path": "./src/components/calendar/months-view/months-view.ts",
      "description": "Instantiate a months view as a separate component in the calendar.",
      "attributes": [
        {
          "name": "locale",
          "description": "Sets the locale used for formatting and displaying the dates.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "month-format",
          "description": "The format of the month. Defaults to long.",
          "type": "\"long\" | \"short\" | \"narrow\" | \"numeric\" | \"2-digit\" | undefined",
          "default": "\"long\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-months-view\"",
          "default": "\"igc-months-view\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "value",
          "description": "Тhe current value of the calendar.",
          "type": "Date",
          "default": "\"new Date()\""
        },
        {
          "name": "locale",
          "attribute": "locale",
          "description": "Sets the locale used for formatting and displaying the dates.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "monthFormat",
          "attribute": "month-format",
          "description": "The format of the month. Defaults to long.",
          "type": "\"long\" | \"short\" | \"narrow\" | \"numeric\" | \"2-digit\" | undefined",
          "default": "\"long\""
        }
      ],
      "cssParts": [
        {
          "name": "months-row",
          "description": "The months row container."
        },
        {
          "name": "month",
          "description": "The month container."
        },
        {
          "name": "month-inner",
          "description": "The inner month container."
        }
      ]
    },
    {
      "name": "igc-years-view",
      "path": "./src/components/calendar/years-view/years-view.ts",
      "description": "Instantiate a years view as a separate component in the calendar.",
      "attributes": [
        {
          "name": "years-per-page",
          "description": "Sets how many years are displayed on a single page.",
          "type": "number",
          "default": "15"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-years-view\"",
          "default": "\"igc-years-view\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "value",
          "description": "Тhe current value of the calendar.",
          "type": "Date",
          "default": "\"new Date()\""
        },
        {
          "name": "yearsPerPage",
          "attribute": "years-per-page",
          "description": "Sets how many years are displayed on a single page.",
          "type": "number",
          "default": "15"
        }
      ],
      "cssParts": [
        {
          "name": "years-row",
          "description": "The years row container."
        },
        {
          "name": "year",
          "description": "The year container."
        },
        {
          "name": "year-inner",
          "description": "The inner year container."
        }
      ]
    },
    {
      "name": "igc-card-actions",
      "path": "./src/components/card/card.actions.ts",
      "description": "A container for card action items like buttons",
      "attributes": [
        {
          "name": "orientation",
          "description": "The orientation of the actions.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-card-actions\"",
          "default": "\"igc-card-actions\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "orientation",
          "attribute": "orientation",
          "description": "The orientation of the actions.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        }
      ],
      "slots": [
        {
          "name": "start",
          "description": "Renders items at the beginning of actions area"
        },
        {
          "name": "",
          "description": "Renders items at the middle of actions area"
        },
        {
          "name": "end",
          "description": "Renders items at the end of actions area"
        }
      ]
    },
    {
      "name": "igc-card-content",
      "path": "./src/components/card/card.content.ts",
      "description": "A container for card's text content",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-card-content\"",
          "default": "\"igc-card-content\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the card text content"
        }
      ]
    },
    {
      "name": "igc-card-header",
      "path": "./src/components/card/card.header.ts",
      "description": "A container for card's header",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-card-header\"",
          "default": "\"igc-card-header\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "thumbnail",
          "description": "Renders header media like icon"
        },
        {
          "name": "title",
          "description": "Renders the card title"
        },
        {
          "name": "subtitle",
          "description": "Renders the card subtitle"
        },
        {
          "name": "",
          "description": "Renders content next to the card title"
        }
      ],
      "cssParts": [
        {
          "name": "header",
          "description": "The card header container"
        }
      ]
    },
    {
      "name": "igc-card-media",
      "path": "./src/components/card/card.media.ts",
      "description": "A container for card's media - could be an image, gif, video",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-card-media\"",
          "default": "\"igc-card-media\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the card media content"
        }
      ]
    },
    {
      "name": "igc-card",
      "path": "./src/components/card/card.ts",
      "description": "A container which wraps different elements related to a single subject",
      "attributes": [
        {
          "name": "elevated",
          "description": "Sets card elevated style, otherwise card looks outlined.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-card\"",
          "default": "\"igc-card\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "elevated",
          "attribute": "elevated",
          "description": "Sets card elevated style, otherwise card looks outlined.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders card content"
        }
      ]
    },
    {
      "name": "igc-checkbox",
      "path": "./src/components/checkbox/checkbox.ts",
      "description": "A check box allowing single values to be selected/deselected.",
      "attributes": [
        {
          "name": "indeterminate",
          "description": "Draws the checkbox in indeterminate state.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The value attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "description": "The checked state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-position",
          "description": "The label position of the control.",
          "type": "\"before\" | \"after\"",
          "default": "\"after\""
        },
        {
          "name": "aria-labelledby",
          "description": "Sets the aria-labelledby attribute for the control.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-checkbox\"",
          "default": "\"igc-checkbox\""
        },
        {
          "name": "indeterminate",
          "attribute": "indeterminate",
          "description": "Draws the checkbox in indeterminate state.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "attribute": "checked",
          "description": "The checked state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelPosition",
          "attribute": "label-position",
          "description": "The label position of the control.",
          "type": "\"before\" | \"after\"",
          "default": "\"after\""
        },
        {
          "name": "ariaLabelledby",
          "attribute": "aria-labelledby",
          "description": "Sets the aria-labelledby attribute for the control.",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when the control's checked state changes."
        },
        {
          "name": "igcFocus",
          "description": "Emitted when the control gains focus."
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the control loses focus."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The checkbox label."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the checkbox."
        },
        {
          "name": "control",
          "description": "The checkbox control."
        },
        {
          "name": "label",
          "description": "The checkbox label."
        },
        {
          "name": "indicator",
          "description": "The checkbox icon."
        }
      ]
    },
    {
      "name": "igc-switch",
      "path": "./src/components/checkbox/switch.ts",
      "description": "Similar to a checkbox, a switch controls the state of a single setting on or off.",
      "attributes": [
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The value attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "description": "The checked state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-position",
          "description": "The label position of the control.",
          "type": "\"before\" | \"after\"",
          "default": "\"after\""
        },
        {
          "name": "aria-labelledby",
          "description": "Sets the aria-labelledby attribute for the control.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-switch\"",
          "default": "\"igc-switch\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "attribute": "checked",
          "description": "The checked state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelPosition",
          "attribute": "label-position",
          "description": "The label position of the control.",
          "type": "\"before\" | \"after\"",
          "default": "\"after\""
        },
        {
          "name": "ariaLabelledby",
          "attribute": "aria-labelledby",
          "description": "Sets the aria-labelledby attribute for the control.",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when the control's checked state changes."
        },
        {
          "name": "igcFocus",
          "description": "Emitted when the control gains focus."
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the control loses focus."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The switch label."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the switch."
        },
        {
          "name": "control",
          "description": "The switch control."
        },
        {
          "name": "thumb",
          "description": "The position indicator of the switch."
        },
        {
          "name": "label",
          "description": "The switch label."
        }
      ]
    },
    {
      "name": "igc-chip",
      "path": "./src/components/chip/chip.ts",
      "description": "Chips help people enter information, make selections, filter content, or trigger actions.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Sets the disabled state for the chip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "removable",
          "description": "Defines if the chip is removable or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selectable",
          "description": "Defines if the chip is selectable or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "description": "Defines if the chip is selected or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "description": "A property that sets the color variant of the chip component.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\""
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-chip\"",
          "default": "\"igc-chip\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Sets the disabled state for the chip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "removable",
          "attribute": "removable",
          "description": "Defines if the chip is removable or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selectable",
          "attribute": "selectable",
          "description": "Defines if the chip is selectable or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Defines if the chip is selected or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "A property that sets the color variant of the chip component.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "events": [
        {
          "name": "igcRemove",
          "description": "Emits an event when the chip component is removed. Returns the removed chip component."
        },
        {
          "name": "igcSelect",
          "description": "Emits event when the chip component is selected/deselected and any related animations and transitions also end."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the chip data."
        },
        {
          "name": "prefix",
          "description": "Renders content before the data of the chip."
        },
        {
          "name": "suffix",
          "description": "Renders content after the data of the chip."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the chip."
        },
        {
          "name": "prefix",
          "description": "The prefix container of the chip."
        },
        {
          "name": "suffix",
          "description": "The suffix container of the chip."
        }
      ]
    },
    {
      "name": "igc-combo-header",
      "path": "./src/components/combo/combo-header.ts",
      "properties": [
        {
          "name": "tagName",
          "type": "string",
          "default": "\"igc-combo-header\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ]
    },
    {
      "name": "igc-combo-item",
      "path": "./src/components/combo/combo-item.ts",
      "attributes": [
        {
          "name": "selected",
          "description": "Determines whether the item is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "description": "Determines whether the item is active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-checkbox",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "string",
          "default": "\"igc-combo-item\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Determines whether the item is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "Determines whether the item is active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideCheckbox",
          "attribute": "hide-checkbox",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "igc-combo-list",
      "path": "./src/components/combo/combo-list.ts",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-combo-list\"",
          "default": "\"igc-combo-list\""
        },
        {
          "name": "items",
          "type": "T[]"
        },
        {
          "name": "renderItem",
          "type": "RenderItemFunction<T>"
        },
        {
          "name": "keyFunction",
          "type": "KeyFn<T>"
        },
        {
          "name": "layout",
          "type": "LayoutConfigValue"
        },
        {
          "name": "scroller",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "layoutComplete",
          "type": "Promise<void> | undefined"
        }
      ]
    },
    {
      "name": "igc-combo",
      "path": "./src/components/combo/combo.ts",
      "attributes": [
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "The disabled attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "The required attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "description": "The invalid attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "description": "The outlined attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "single-select",
          "description": "Enables single selection mode and moves item filtering to the main input.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "autofocus",
          "description": "The autofocus attribute of the control.",
          "type": "boolean"
        },
        {
          "name": "autofocus-list",
          "description": "Focuses the list of options when the menu opens.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label",
          "description": "The label attribute of the control.",
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "placeholder-search",
          "description": "The placeholder attribute of the search input.",
          "type": "string",
          "default": "\"Search\""
        },
        {
          "name": "dir",
          "description": "The direction attribute of the control.",
          "type": "\"ltr\" | \"rtl\" | \"auto\"",
          "default": "\"auto\""
        },
        {
          "name": "open",
          "description": "Sets the open state of the component.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "flip",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "value-key",
          "description": "The key in the data source used when selecting items.",
          "type": "keyof T | undefined"
        },
        {
          "name": "display-key",
          "description": "The key in the data source used to display items in the list.",
          "type": "keyof T | undefined",
          "default": "\"valueKey\""
        },
        {
          "name": "group-key",
          "description": "The key in the data source used to group items in the list.",
          "type": "keyof T | undefined",
          "default": "\"displayKey\""
        },
        {
          "name": "group-sorting",
          "description": "Sorts the items in each group by ascending or descending order.",
          "type": "\"asc\" | \"desc\"",
          "default": "\"asc\""
        },
        {
          "name": "filtering-options",
          "description": "An object that configures the filtering of the combo.",
          "type": "FilteringOptions<T>",
          "default": "{\"filterKey\":\"displayKey\",\"caseSensitive\":false}"
        },
        {
          "name": "case-sensitive-icon",
          "description": "Enables the case sensitive search icon in the filtering input.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disable-filtering",
          "description": "Disables the filtering of the list of options.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-combo\"",
          "default": "\"igc-combo\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "data",
          "description": "The data source used to generate the list of options.",
          "type": "T[]",
          "default": "[]"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "The disabled attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "The required attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "The invalid attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "The outlined attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "singleSelect",
          "attribute": "single-select",
          "description": "Enables single selection mode and moves item filtering to the main input.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "description": "The autofocus attribute of the control.",
          "type": "boolean"
        },
        {
          "name": "autofocusList",
          "attribute": "autofocus-list",
          "description": "Focuses the list of options when the menu opens.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label attribute of the control.",
          "type": "string"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "placeholderSearch",
          "attribute": "placeholder-search",
          "description": "The placeholder attribute of the search input.",
          "type": "string",
          "default": "\"Search\""
        },
        {
          "name": "dir",
          "attribute": "dir",
          "description": "The direction attribute of the control.",
          "type": "\"ltr\" | \"rtl\" | \"auto\"",
          "default": "\"auto\""
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Sets the open state of the component.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "flip",
          "attribute": "flip",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "valueKey",
          "attribute": "value-key",
          "description": "The key in the data source used when selecting items.",
          "type": "keyof T | undefined"
        },
        {
          "name": "displayKey",
          "attribute": "display-key",
          "description": "The key in the data source used to display items in the list.",
          "type": "keyof T | undefined",
          "default": "\"valueKey\""
        },
        {
          "name": "groupKey",
          "attribute": "group-key",
          "description": "The key in the data source used to group items in the list.",
          "type": "keyof T | undefined",
          "default": "\"displayKey\""
        },
        {
          "name": "groupSorting",
          "attribute": "group-sorting",
          "description": "Sorts the items in each group by ascending or descending order.",
          "type": "\"asc\" | \"desc\"",
          "default": "\"asc\""
        },
        {
          "name": "filteringOptions",
          "attribute": "filtering-options",
          "description": "An object that configures the filtering of the combo.",
          "type": "FilteringOptions<T>",
          "default": "{\"filterKey\":\"displayKey\",\"caseSensitive\":false}"
        },
        {
          "name": "caseSensitiveIcon",
          "attribute": "case-sensitive-icon",
          "description": "Enables the case sensitive search icon in the filtering input.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disableFiltering",
          "attribute": "disable-filtering",
          "description": "Disables the filtering of the list of options.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "itemTemplate",
          "description": "The template used for the content of each combo item.",
          "type": "ComboItemTemplate<T>",
          "default": "\"({ item }) => {\\n    if (typeof item !== 'object' || item === null) {\\n      return String(item) as any;\\n    }\\n\\n    if (this.displayKey) {\\n      return html`${item[this.displayKey]}`;\\n    }\\n\\n    return html`${String(item)}`;\\n  }\""
        },
        {
          "name": "groupHeaderTemplate",
          "description": "The template used for the content of each combo group header.",
          "type": "ComboItemTemplate<T>",
          "default": "\"({ item }) => {\\n    return html`${this.groupKey && item[this.groupKey]}`;\\n  }\""
        },
        {
          "name": "value",
          "description": "Returns the current selection as a list of commma separated values,\nrepresented by the display key, when provided.",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "igcFocus",
          "description": "Emitted when the select gains focus."
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the select loses focus."
        },
        {
          "name": "igcChange",
          "description": "Emitted when the control's selection has changed."
        },
        {
          "name": "igcOpening",
          "description": "Emitted just before the list of options is opened."
        },
        {
          "name": "igcOpened",
          "description": "Emitted after the list of options is opened."
        },
        {
          "name": "igcClosing",
          "description": "Emitter just before the list of options is closed."
        },
        {
          "name": "igcClosed",
          "description": "Emitted after the list of options is closed."
        }
      ],
      "slots": [
        {
          "name": "prefix",
          "description": "Renders content before the input."
        },
        {
          "name": "suffix",
          "description": "Renders content after input."
        },
        {
          "name": "header",
          "description": "Renders a container before the list of options."
        },
        {
          "name": "footer",
          "description": "Renders a container after the list of options."
        },
        {
          "name": "helper-text",
          "description": "Renders content below the input."
        },
        {
          "name": "toggle-icon",
          "description": "Renders content inside the suffix container."
        },
        {
          "name": "clear-icon",
          "description": "Renders content inside the suffix container."
        }
      ],
      "cssParts": [
        {
          "name": "label",
          "description": "The encapsulated text label."
        },
        {
          "name": "input",
          "description": "The main input field."
        },
        {
          "name": "native-input",
          "description": "The native input of the main input field."
        },
        {
          "name": "prefix",
          "description": "The prefix wrapper."
        },
        {
          "name": "suffix",
          "description": "The suffix wrapper."
        },
        {
          "name": "toggle-icon",
          "description": "The toggle icon wrapper."
        },
        {
          "name": "clear-icon",
          "description": "The clear icon wrapper."
        },
        {
          "name": "case-icon",
          "description": "The case icon wrapper."
        },
        {
          "name": "helper-text",
          "description": "The helper text wrapper."
        },
        {
          "name": "search-input",
          "description": "The search input field."
        },
        {
          "name": "list-wrapper",
          "description": "The list of options wrapper."
        },
        {
          "name": "list",
          "description": "The list of options box."
        },
        {
          "name": "item",
          "description": "Represents each item in the list of options."
        },
        {
          "name": "group-header",
          "description": "Represents each header in the list of options."
        },
        {
          "name": "active",
          "description": "Appended to the item parts list when the item is active."
        },
        {
          "name": "selected",
          "description": "Appended to the item parts list when the item is selected."
        },
        {
          "name": "checkbox",
          "description": "Represents each checkbox of each list item."
        },
        {
          "name": "checkbox-indicator",
          "description": "Represents the checkbox indicator of each list item."
        },
        {
          "name": "checked",
          "description": "Appended to checkbox parts list when checkbox is checked."
        },
        {
          "name": "header",
          "description": "The container holding the header content."
        },
        {
          "name": "footer",
          "description": "The container holding the footer content."
        },
        {
          "name": "empty",
          "description": "The container holding the empty content."
        }
      ]
    },
    {
      "name": "igc-date-time-input",
      "path": "./src/components/date-time-input/date-time-input.ts",
      "description": "A date time input is an input field that lets you set and edit the date and time in a chosen input element\nusing customizable display and input formats.",
      "attributes": [
        {
          "name": "input-format",
          "description": "The date format to apply on the input.",
          "type": "string"
        },
        {
          "name": "min-value",
          "description": "The minimum value required for the input to remain valid.",
          "type": "Date | null"
        },
        {
          "name": "max-value",
          "description": "The maximum value required for the input to remain valid.",
          "type": "Date | null"
        },
        {
          "name": "display-format",
          "description": "Format to display the value in when not editing.\nDefaults to the input format if not set.",
          "type": "string"
        },
        {
          "name": "spin-loop",
          "description": "Sets whether to loop over the currently spun segment.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "locale",
          "description": "The locale settings used to display the value.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "prompt",
          "description": "The prompt symbol to use for unfilled parts of the mask.",
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "The value of the input.",
          "type": "Date | null"
        },
        {
          "name": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "outlined",
          "description": "Whether the control will have outlined appearance.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Makes the control a disabled field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "description": "Makes the control a readonly field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label for the control.",
          "type": "string"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-date-time-input\"",
          "default": "\"igc-date-time-input\""
        },
        {
          "name": "inputFormat",
          "attribute": "input-format",
          "description": "The date format to apply on the input.",
          "type": "string"
        },
        {
          "name": "minValue",
          "attribute": "min-value",
          "description": "The minimum value required for the input to remain valid.",
          "type": "Date | null"
        },
        {
          "name": "maxValue",
          "attribute": "max-value",
          "description": "The maximum value required for the input to remain valid.",
          "type": "Date | null"
        },
        {
          "name": "displayFormat",
          "attribute": "display-format",
          "description": "Format to display the value in when not editing.\nDefaults to the input format if not set.",
          "type": "string"
        },
        {
          "name": "spinDelta",
          "description": "Delta values used to increment or decrement each date part on step actions.\nAll values default to `1`.",
          "type": "DatePartDeltas"
        },
        {
          "name": "spinLoop",
          "attribute": "spin-loop",
          "description": "Sets whether to loop over the currently spun segment.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "locale",
          "attribute": "locale",
          "description": "The locale settings used to display the value.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "prompt",
          "attribute": "prompt",
          "description": "The prompt symbol to use for unfilled parts of the mask.",
          "type": "string"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value of the input.",
          "type": "Date | null"
        },
        {
          "name": "dir",
          "attribute": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "Whether the control will have outlined appearance.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Makes the control a disabled field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "attribute": "readonly",
          "description": "Makes the control a readonly field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label for the control.",
          "type": "string"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "events": [
        {
          "name": "igcInput",
          "description": "Emitted when the control input receives user input."
        },
        {
          "name": "igcChange",
          "description": "Emitted when the control's checked state changes."
        },
        {
          "name": "igcFocus",
          "description": "Emitted when the control gains focus."
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the control loses focus."
        }
      ],
      "slots": [
        {
          "name": "prefix",
          "description": "Renders content before the input."
        },
        {
          "name": "suffix",
          "description": "Renders content after input."
        },
        {
          "name": "helper-text",
          "description": "Renders content below the input."
        }
      ],
      "cssParts": [
        {
          "name": "container",
          "description": "The main wrapper that holds all main input elements."
        },
        {
          "name": "input",
          "description": "The native input element."
        },
        {
          "name": "label",
          "description": "The native label element."
        },
        {
          "name": "prefix",
          "description": "The prefix wrapper."
        },
        {
          "name": "suffix",
          "description": "The suffix wrapper."
        },
        {
          "name": "helper-text",
          "description": "The helper text wrapper."
        }
      ]
    },
    {
      "name": "igc-dialog",
      "path": "./src/components/dialog/dialog.ts",
      "description": "Represents a Dialog component.",
      "attributes": [
        {
          "name": "close-on-escape",
          "description": "Whether the dialog should be closed when pressing the 'ESCAPE' button.",
          "type": "boolean",
          "deprecatedMessage": "since version 4.2.3. Use `keepOpenOnEscape` instead."
        },
        {
          "name": "keep-open-on-escape",
          "description": "Whether the dialog should be kept open when pressing the 'ESCAPE' button.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "close-on-outside-click",
          "description": "Whether the dialog should be closed when clicking outside of it.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-default-action",
          "description": "Whether to hide the default action button for the dialog.\n\nWhen there is projected content in the `footer` slot this property\nhas no effect.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "description": "Whether the dialog is opened.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "title",
          "description": "Sets the title of the dialog.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-dialog\"",
          "default": "\"igc-dialog\""
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"styles\"]"
        },
        {
          "name": "closeOnEscape",
          "attribute": "close-on-escape",
          "description": "Whether the dialog should be closed when pressing the 'ESCAPE' button.",
          "type": "boolean",
          "deprecatedMessage": "since version 4.2.3. Use `keepOpenOnEscape` instead."
        },
        {
          "name": "keepOpenOnEscape",
          "attribute": "keep-open-on-escape",
          "description": "Whether the dialog should be kept open when pressing the 'ESCAPE' button.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "closeOnOutsideClick",
          "attribute": "close-on-outside-click",
          "description": "Whether the dialog should be closed when clicking outside of it.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideDefaultAction",
          "attribute": "hide-default-action",
          "description": "Whether to hide the default action button for the dialog.\n\nWhen there is projected content in the `footer` slot this property\nhas no effect.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Whether the dialog is opened.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "title",
          "attribute": "title",
          "description": "Sets the title of the dialog.",
          "type": "string"
        },
        {
          "name": "returnValue",
          "description": "Sets the return value for the dialog.",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "igcClosing",
          "description": "Emitter just before the dialog is closed."
        },
        {
          "name": "igcClosed",
          "description": "Emitted after closing the dialog."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders content inside the default slot."
        },
        {
          "name": "title",
          "description": "Renders the title of the dialog header."
        },
        {
          "name": "footer",
          "description": "Renders the dialog footer."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the dialog."
        },
        {
          "name": "title",
          "description": "The title container."
        },
        {
          "name": "footer",
          "description": "The footer container."
        },
        {
          "name": "overlay",
          "description": "The overlay."
        }
      ]
    },
    {
      "name": "igc-dropdown-group",
      "path": "./src/components/dropdown/dropdown-group.ts",
      "properties": [
        {
          "name": "tagName",
          "type": "string",
          "default": "\"igc-dropdown-group\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "items",
          "description": "All child `igc-dropdown-item`s.",
          "type": "IgcDropdownItemComponent[]"
        }
      ],
      "slots": [
        {
          "name": "label",
          "description": "Contains the group's label."
        },
        {
          "name": "",
          "description": "Intended to contain the items belonging to this group."
        }
      ],
      "cssParts": [
        {
          "name": "label",
          "description": "The native label element."
        }
      ]
    },
    {
      "name": "igc-dropdown-header",
      "path": "./src/components/dropdown/dropdown-header.ts",
      "properties": [
        {
          "name": "tagName",
          "type": "string",
          "default": "\"igc-dropdown-header\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the header."
        }
      ]
    },
    {
      "name": "igc-dropdown-item",
      "path": "./src/components/dropdown/dropdown-item.ts",
      "description": "Represents an item in a dropdown list.",
      "attributes": [
        {
          "name": "value",
          "description": "Тhe current value of the item.\nIf not specified, the element's text content is used.",
          "type": "string"
        },
        {
          "name": "selected",
          "description": "Determines whether the item is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "description": "Determines whether the item is active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Determines whether the item is disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "string",
          "default": "\"igc-dropdown-item\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Тhe current value of the item.\nIf not specified, the element's text content is used.",
          "type": "string"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Determines whether the item is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "Determines whether the item is active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Determines whether the item is disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "prefix",
          "description": "Renders content before the item's main content."
        },
        {
          "name": "",
          "description": "Renders the item's main content."
        },
        {
          "name": "suffix",
          "description": "Renders content after the item's main content."
        }
      ],
      "cssParts": [
        {
          "name": "prefix",
          "description": "The prefix wrapper."
        },
        {
          "name": "content",
          "description": "The main content wrapper."
        },
        {
          "name": "suffix",
          "description": "The suffix wrapper."
        }
      ]
    },
    {
      "name": "igc-dropdown",
      "path": "./src/components/dropdown/dropdown.ts",
      "description": "Represents a DropDown component.",
      "attributes": [
        {
          "name": "keep-open-on-select",
          "description": "Whether the dropdown should be kept open on selection.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "scroll-strategy",
          "description": "Determines the behavior of the component during scrolling the container.",
          "type": "\"scroll\" | \"block\" | \"close\"",
          "default": "\"scroll\""
        },
        {
          "name": "keep-open-on-outside-click",
          "description": "Whether the component should be kept open on clicking outside of it.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "description": "Sets the open state of the component.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placement",
          "description": "The preferred placement of the component around the target element.",
          "type": "\"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"right\" | \"right-start\" | \"right-end\" | \"left\" | \"left-start\" | \"left-end\"",
          "default": "\"bottom-start\""
        },
        {
          "name": "position-strategy",
          "description": "Sets the component's positioning strategy.",
          "type": "\"absolute\" | \"fixed\"",
          "default": "\"absolute\""
        },
        {
          "name": "flip",
          "description": "Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\nWhen true, once enough space is detected on its preferred side, it will flip back.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "distance",
          "description": "The distance from the target element.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "same-width",
          "description": "Whether the dropdown's width should be the same as the target's one.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "keepOpenOnSelect",
          "attribute": "keep-open-on-select",
          "description": "Whether the dropdown should be kept open on selection.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "scrollStrategy",
          "attribute": "scroll-strategy",
          "description": "Determines the behavior of the component during scrolling the container.",
          "type": "\"scroll\" | \"block\" | \"close\"",
          "default": "\"scroll\""
        },
        {
          "name": "keepOpenOnOutsideClick",
          "attribute": "keep-open-on-outside-click",
          "description": "Whether the component should be kept open on clicking outside of it.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Sets the open state of the component.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placement",
          "attribute": "placement",
          "description": "The preferred placement of the component around the target element.",
          "type": "\"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"right\" | \"right-start\" | \"right-end\" | \"left\" | \"left-start\" | \"left-end\"",
          "default": "\"bottom-start\""
        },
        {
          "name": "positionStrategy",
          "attribute": "position-strategy",
          "description": "Sets the component's positioning strategy.",
          "type": "\"absolute\" | \"fixed\"",
          "default": "\"absolute\""
        },
        {
          "name": "flip",
          "attribute": "flip",
          "description": "Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\nWhen true, once enough space is detected on its preferred side, it will flip back.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "distance",
          "attribute": "distance",
          "description": "The distance from the target element.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "sameWidth",
          "attribute": "same-width",
          "description": "Whether the dropdown's width should be the same as the target's one.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when the selected item changes."
        },
        {
          "name": "igcOpening",
          "description": "Emitted just before the dropdown is open."
        },
        {
          "name": "igcOpened",
          "description": "Emitted after the dropdown is open."
        },
        {
          "name": "igcClosing",
          "description": "Emitter just before the dropdown is closed."
        },
        {
          "name": "igcClosed",
          "description": "Emitted after closing the dropdown."
        }
      ],
      "slots": [
        {
          "name": "target",
          "description": "Renders the dropdown's target element."
        },
        {
          "name": "",
          "description": "Renders the dropdown list items."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The dropdown list wrapper."
        },
        {
          "name": "list",
          "description": "The dropdown list."
        }
      ]
    },
    {
      "name": "igc-expansion-panel",
      "path": "./src/components/expansion-panel/expansion-panel.ts",
      "description": "The Expansion Panel Component provides a way to display information in a toggleable way -\ncompact summary view containing title and description and expanded detail view containing\nadditional content to the summary header.",
      "attributes": [
        {
          "name": "open",
          "description": "Indicates whether the contents of the control should be visible.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Get/Set whether the expansion panel is disabled. Disabled panels are ignored for user interactions.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "indicator-position",
          "description": "The indicator position of the expansion panel.",
          "type": "\"start\" | \"end\" | \"none\"",
          "default": "\"start\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-expansion-panel\"",
          "default": "\"igc-expansion-panel\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Indicates whether the contents of the control should be visible.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Get/Set whether the expansion panel is disabled. Disabled panels are ignored for user interactions.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "indicatorPosition",
          "attribute": "indicator-position",
          "description": "The indicator position of the expansion panel.",
          "type": "\"start\" | \"end\" | \"none\"",
          "default": "\"start\""
        }
      ],
      "events": [
        {
          "name": "igcOpening",
          "description": "Emitted before opening the expansion panel."
        },
        {
          "name": "igcOpened",
          "description": "Emitted after the expansion panel is opened."
        },
        {
          "name": "igcClosing",
          "description": "Emitted before closing the expansion panel."
        },
        {
          "name": "igcClosed",
          "description": "Emitted after the expansion panel is closed."
        }
      ],
      "slots": [
        {
          "name": "title",
          "description": "renders the title of the panel's header"
        },
        {
          "name": "subtitle",
          "description": "renders the subtitle of the panel's header"
        },
        {
          "name": "indicator",
          "description": "renders the expand/collapsed indicator"
        }
      ],
      "cssParts": [
        {
          "name": "header",
          "description": "The container of the expansion indicator, title and subtitle."
        },
        {
          "name": "title",
          "description": "The title container."
        },
        {
          "name": "subtitle",
          "description": "The subtitle container."
        },
        {
          "name": "indicator",
          "description": "The indicator container."
        },
        {
          "name": "content",
          "description": "The expansion panel's content wrapper."
        }
      ]
    },
    {
      "name": "igc-form",
      "path": "./src/components/form/form.ts",
      "description": "The form is a component used to collect user input from\ninteractive controls.",
      "attributes": [
        {
          "name": "novalidate",
          "description": "Specifies if form data validation should be skipped on submit.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-form\"",
          "default": "\"igc-form\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\n    :host {\\n      display: block;\\n    }\\n  `\""
        },
        {
          "name": "novalidate",
          "attribute": "novalidate",
          "description": "Specifies if form data validation should be skipped on submit.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "igcSubmit",
          "description": "Emitted when the form is submitted."
        },
        {
          "name": "igcReset",
          "description": "Emitted when the form is reset."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default slot for the form."
        }
      ]
    },
    {
      "name": "igc-icon",
      "path": "./src/components/icon/icon.ts",
      "description": "Icon component",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the icon glyph to draw.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "collection",
          "description": "The name of the registered collection for look up of icons.\nDefaults to `default`.",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "mirrored",
          "description": "Whether to flip the icon. Useful for RTL layouts.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-icon\"",
          "default": "\"igc-icon\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name of the icon glyph to draw.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "collection",
          "attribute": "collection",
          "description": "The name of the registered collection for look up of icons.\nDefaults to `default`.",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "mirrored",
          "attribute": "mirrored",
          "description": "Whether to flip the icon. Useful for RTL layouts.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ]
    },
    {
      "name": "igc-input",
      "path": "./src/components/input/input.ts",
      "attributes": [
        {
          "name": "type",
          "description": "The type attribute of the control.",
          "type": "\"number\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "default": "\"text\""
        },
        {
          "name": "inputmode",
          "description": "The input mode attribute of the control.",
          "type": "\"numeric\" | \"none\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"txt\" | \"decimal\""
        },
        {
          "name": "pattern",
          "description": "The pattern attribute of the control.",
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "minlength",
          "description": "The minlength attribute of the control.",
          "type": "number"
        },
        {
          "name": "maxlength",
          "description": "The maxlength attribute of the control.",
          "type": "number"
        },
        {
          "name": "min",
          "description": "The min attribute of the control.",
          "type": "string | number"
        },
        {
          "name": "max",
          "description": "The max attribute of the control.",
          "type": "string | number"
        },
        {
          "name": "step",
          "description": "The step attribute of the control.",
          "type": "number"
        },
        {
          "name": "autofocus",
          "description": "The autofocus attribute of the control.",
          "type": "boolean"
        },
        {
          "name": "autocomplete",
          "description": "The autocomplete attribute of the control.",
          "type": "string"
        },
        {
          "name": "tabIndex",
          "type": "number",
          "default": "0"
        },
        {
          "name": "value",
          "description": "The value of the control.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "outlined",
          "description": "Whether the control will have outlined appearance.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Makes the control a disabled field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "description": "Makes the control a readonly field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label for the control.",
          "type": "string"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-input\"",
          "default": "\"igc-input\""
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "The type attribute of the control.",
          "type": "\"number\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "default": "\"text\""
        },
        {
          "name": "inputmode",
          "attribute": "inputmode",
          "description": "The input mode attribute of the control.",
          "type": "\"numeric\" | \"none\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"txt\" | \"decimal\""
        },
        {
          "name": "pattern",
          "attribute": "pattern",
          "description": "The pattern attribute of the control.",
          "type": "string"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "minlength",
          "attribute": "minlength",
          "description": "The minlength attribute of the control.",
          "type": "number"
        },
        {
          "name": "maxlength",
          "attribute": "maxlength",
          "description": "The maxlength attribute of the control.",
          "type": "number"
        },
        {
          "name": "min",
          "attribute": "min",
          "description": "The min attribute of the control.",
          "type": "string | number"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "The max attribute of the control.",
          "type": "string | number"
        },
        {
          "name": "step",
          "attribute": "step",
          "description": "The step attribute of the control.",
          "type": "number"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "description": "The autofocus attribute of the control.",
          "type": "boolean"
        },
        {
          "name": "autocomplete",
          "attribute": "autocomplete",
          "description": "The autocomplete attribute of the control.",
          "type": "string"
        },
        {
          "name": "tabIndex",
          "attribute": "tabIndex",
          "type": "number",
          "default": "0"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value of the control.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "dir",
          "attribute": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "Whether the control will have outlined appearance.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Makes the control a disabled field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "attribute": "readonly",
          "description": "Makes the control a readonly field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label for the control.",
          "type": "string"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "events": [
        {
          "name": "igcInput",
          "description": "Emitted when the control input receives user input."
        },
        {
          "name": "igcChange",
          "description": "Emitted when the control's checked state changes."
        },
        {
          "name": "igcFocus",
          "description": "Emitted when the control gains focus."
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the control loses focus."
        }
      ],
      "slots": [
        {
          "name": "prefix",
          "description": "Renders content before the input."
        },
        {
          "name": "suffix",
          "description": "Renders content after input."
        },
        {
          "name": "helper-text",
          "description": "Renders content below the input."
        }
      ],
      "cssParts": [
        {
          "name": "container",
          "description": "The main wrapper that holds all main input elements."
        },
        {
          "name": "input",
          "description": "The native input element."
        },
        {
          "name": "label",
          "description": "The native label element."
        },
        {
          "name": "prefix",
          "description": "The prefix wrapper."
        },
        {
          "name": "suffix",
          "description": "The suffix wrapper."
        },
        {
          "name": "helper-text",
          "description": "The helper text wrapper."
        }
      ]
    },
    {
      "name": "igc-list-header",
      "path": "./src/components/list/list-header.ts",
      "description": "Header list item.",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-list-header\"",
          "default": "\"igc-list-header\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders header list item's content."
        }
      ]
    },
    {
      "name": "igc-list-item",
      "path": "./src/components/list/list-item.ts",
      "description": "The list-item component is a container\nintended for row items in the list component.",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-list-item\"",
          "default": "\"igc-list-item\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders custom content."
        },
        {
          "name": "start",
          "description": "Renders content before all other content."
        },
        {
          "name": "end",
          "description": "Renders content after all other content."
        },
        {
          "name": "title",
          "description": "Renders the title."
        },
        {
          "name": "subtitle",
          "description": "Renders the subtitle."
        }
      ],
      "cssParts": [
        {
          "name": "start",
          "description": "The start container."
        },
        {
          "name": "end",
          "description": "The end container."
        },
        {
          "name": "content",
          "description": "The header and custom content container."
        },
        {
          "name": "header",
          "description": "The title and subtitle container."
        },
        {
          "name": "title",
          "description": "The title container."
        },
        {
          "name": "subtitle",
          "description": "The subtitle container."
        }
      ]
    },
    {
      "name": "igc-list",
      "path": "./src/components/list/list.ts",
      "description": "Displays a collection of data items in a templatable list format.",
      "attributes": [
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-list\"",
          "default": "\"igc-list\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the list items and list headers inside default slot."
        }
      ]
    },
    {
      "name": "igc-mask-input",
      "path": "./src/components/mask-input/mask-input.ts",
      "description": "A masked input is an input field where a developer can control user input and format the visible value,\nbased on configurable rules",
      "attributes": [
        {
          "name": "value-mode",
          "description": "Dictates the behavior when retrieving the value of the control:\n\n- `raw` will return the clean user input.\n- `withFormatting` will return the value with all literals and prompts.",
          "type": "\"raw\" | \"withFormatting\"",
          "default": "\"raw\""
        },
        {
          "name": "mask",
          "description": "The mask pattern to apply on the input.",
          "type": "string"
        },
        {
          "name": "prompt",
          "description": "The prompt symbol to use for unfilled parts of the mask.",
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "The value of the input.\n\nRegardless of the currently set `value-mode`, an empty value will return an empty string.",
          "type": "string"
        },
        {
          "name": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "outlined",
          "description": "Whether the control will have outlined appearance.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Makes the control a disabled field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "description": "Makes the control a readonly field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label for the control.",
          "type": "string"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-mask-input\"",
          "default": "\"igc-mask-input\""
        },
        {
          "name": "valueMode",
          "attribute": "value-mode",
          "description": "Dictates the behavior when retrieving the value of the control:\n\n- `raw` will return the clean user input.\n- `withFormatting` will return the value with all literals and prompts.",
          "type": "\"raw\" | \"withFormatting\"",
          "default": "\"raw\""
        },
        {
          "name": "mask",
          "attribute": "mask",
          "description": "The mask pattern to apply on the input.",
          "type": "string"
        },
        {
          "name": "prompt",
          "attribute": "prompt",
          "description": "The prompt symbol to use for unfilled parts of the mask.",
          "type": "string"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value of the input.\n\nRegardless of the currently set `value-mode`, an empty value will return an empty string.",
          "type": "string"
        },
        {
          "name": "dir",
          "attribute": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "Whether the control will have outlined appearance.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Makes the control a disabled field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "attribute": "readonly",
          "description": "Makes the control a readonly field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label for the control.",
          "type": "string"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "events": [
        {
          "name": "igcInput",
          "description": "Emitted when the control receives user input"
        },
        {
          "name": "igcChange",
          "description": "Emitted when an alteration of the control's value is committed by the user"
        },
        {
          "name": "igcFocus",
          "description": "Emitted when the control gains focus"
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the control loses focus"
        }
      ],
      "slots": [
        {
          "name": "prefix",
          "description": "Renders content before the input"
        },
        {
          "name": "suffix",
          "description": "Renders content after the input"
        },
        {
          "name": "helper-text",
          "description": "Renders content below the input"
        }
      ],
      "cssParts": [
        {
          "name": "container",
          "description": "The main wrapper that holds all main input elements"
        },
        {
          "name": "input",
          "description": "The native input element"
        },
        {
          "name": "label",
          "description": "The native label element"
        },
        {
          "name": "prefix",
          "description": "The prefix wrapper"
        },
        {
          "name": "suffix",
          "description": "The suffix wrapper"
        },
        {
          "name": "helper-text",
          "description": "The helper text wrapper"
        }
      ]
    },
    {
      "name": "igc-nav-drawer-header-item",
      "path": "./src/components/nav-drawer/nav-drawer-header-item.ts",
      "description": "A wrapper for navigation drawer's header.",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-nav-drawer-header-item\"",
          "default": "\"igc-nav-drawer-header-item\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the header content"
        }
      ]
    },
    {
      "name": "igc-nav-drawer-item",
      "path": "./src/components/nav-drawer/nav-drawer-item.ts",
      "description": "Represents a navigation drawer item.",
      "attributes": [
        {
          "name": "disabled",
          "description": "Determines whether the drawer is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "description": "Determines whether the drawer is active.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-nav-drawer-item\"",
          "default": "\"igc-nav-drawer-item\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Determines whether the drawer is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "Determines whether the drawer is active.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "content",
          "description": "The content slot for the drawer item."
        },
        {
          "name": "icon",
          "description": "The slot for the icon of the drawer item."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the drawer item."
        },
        {
          "name": "icon",
          "description": "The icon container."
        },
        {
          "name": "content",
          "description": "The content container."
        }
      ]
    },
    {
      "name": "igc-nav-drawer",
      "path": "./src/components/nav-drawer/nav-drawer.ts",
      "description": "Represents a side navigation container that provides\nquick access between views.",
      "attributes": [
        {
          "name": "position",
          "description": "The position of the drawer.",
          "type": "\"start\" | \"end\" | \"top\" | \"bottom\" | \"relative\"",
          "default": "\"start\""
        },
        {
          "name": "open",
          "description": "Determines whether the drawer is opened.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-nav-drawer\"",
          "default": "\"igc-nav-drawer\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "position",
          "attribute": "position",
          "description": "The position of the drawer.",
          "type": "\"start\" | \"end\" | \"top\" | \"bottom\" | \"relative\"",
          "default": "\"start\""
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Determines whether the drawer is opened.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The default slot for the drawer."
        },
        {
          "name": "mini",
          "description": "The slot for the mini variant of the drawer."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the navigation drawer."
        },
        {
          "name": "main",
          "description": "The main container."
        },
        {
          "name": "mini",
          "description": "The mini container."
        }
      ]
    },
    {
      "name": "igc-navbar",
      "path": "./src/components/navbar/navbar.ts",
      "description": "A navigation bar component is used to facilitate navigation through\na series of hierarchical screens within an app.",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-navbar\"",
          "default": "\"igc-navbar\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders a title inside the default slot."
        },
        {
          "name": "start",
          "description": "Renders left aligned icons."
        },
        {
          "name": "end",
          "description": "Renders right aligned action icons."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the navigation bar."
        },
        {
          "name": "start",
          "description": "The left aligned icon container."
        },
        {
          "name": "middle",
          "description": "The navigation bar title container."
        },
        {
          "name": "end",
          "description": "The right aligned action icons container."
        }
      ]
    },
    {
      "name": "igc-circular-gradient",
      "path": "./src/components/progress/circular-gradient.ts",
      "description": "Used for defining gradient stops in the igc-circular-progress.\nFor each `igc-circular-gradient` defined as `gradient` slot of `igc-circular-progress` element would be created a SVG stop element.\nThe values passed as `color`, `offset` and `opacity` would be set as\n`stop-color`, `offset` and `stop-opacity` of the SVG element without further validations.",
      "attributes": [
        {
          "name": "offset",
          "description": "Defines where the gradient stop is placed along the gradient vector",
          "type": "string",
          "default": "\"0%\""
        },
        {
          "name": "color",
          "description": "Defines the color of the gradient stop",
          "type": "string",
          "default": "\"black\""
        },
        {
          "name": "opacity",
          "description": "Defines the opacity of the gradient stop",
          "type": "number",
          "default": "1"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-circular-gradient\"",
          "default": "\"igc-circular-gradient\""
        },
        {
          "name": "offset",
          "attribute": "offset",
          "description": "Defines where the gradient stop is placed along the gradient vector",
          "type": "string",
          "default": "\"0%\""
        },
        {
          "name": "color",
          "attribute": "color",
          "description": "Defines the color of the gradient stop",
          "type": "string",
          "default": "\"black\""
        },
        {
          "name": "opacity",
          "attribute": "opacity",
          "description": "Defines the opacity of the gradient stop",
          "type": "number",
          "default": "1"
        }
      ]
    },
    {
      "name": "igc-circular-progress",
      "path": "./src/components/progress/circular-progress.ts",
      "description": "A circular progress indicator used to express unspecified wait time or display\nthe length of a process.",
      "attributes": [
        {
          "name": "max",
          "description": "Maximum value of the control.",
          "type": "number",
          "default": "100"
        },
        {
          "name": "value",
          "description": "The value of the control.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "variant",
          "description": "The variant of the control.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
          "default": "\"primary\""
        },
        {
          "name": "animation-duration",
          "description": "Animation duration in milliseconds.",
          "type": "number",
          "default": "500"
        },
        {
          "name": "indeterminate",
          "description": "The indeterminate state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-label",
          "description": "Shows/hides the label of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-format",
          "description": "Format string for the default label of the control.\nPlaceholders:\n {0} - current value of the control.\n {1} - max value of the control.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-circular-progress\"",
          "default": "\"igc-circular-progress\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Maximum value of the control.",
          "type": "number",
          "default": "100"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value of the control.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The variant of the control.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
          "default": "\"primary\""
        },
        {
          "name": "animationDuration",
          "attribute": "animation-duration",
          "description": "Animation duration in milliseconds.",
          "type": "number",
          "default": "500"
        },
        {
          "name": "indeterminate",
          "attribute": "indeterminate",
          "description": "The indeterminate state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideLabel",
          "attribute": "hide-label",
          "description": "Shows/hides the label of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelFormat",
          "attribute": "label-format",
          "description": "Format string for the default label of the control.\nPlaceholders:\n {0} - current value of the control.\n {1} - max value of the control.",
          "type": "string"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The text area container."
        },
        {
          "name": "gradient",
          "description": "Customize the progress bar in order to use a color gradient instead of a solid color. Accepts `igc-circular-gradient` elements."
        }
      ],
      "cssParts": [
        {
          "name": "svg"
        },
        {
          "name": "gradient_start"
        },
        {
          "name": "gradient_end"
        },
        {
          "name": "track"
        },
        {
          "name": "fill"
        },
        {
          "name": "label"
        },
        {
          "name": "value"
        },
        {
          "name": "indeterminate"
        },
        {
          "name": "primary"
        },
        {
          "name": "danger"
        },
        {
          "name": "warning"
        },
        {
          "name": "info"
        },
        {
          "name": "success"
        }
      ]
    },
    {
      "name": "igc-linear-progress",
      "path": "./src/components/progress/linear-progress.ts",
      "description": "A linear progress indicator used to express unspecified wait time or display\nthe length of a process.",
      "attributes": [
        {
          "name": "striped",
          "description": "Sets the striped look of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-align",
          "description": "The position for the default label of the control.",
          "type": "\"top\" | \"bottom\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\"",
          "default": "\"top-start\""
        },
        {
          "name": "max",
          "description": "Maximum value of the control.",
          "type": "number",
          "default": "100"
        },
        {
          "name": "value",
          "description": "The value of the control.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "variant",
          "description": "The variant of the control.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
          "default": "\"primary\""
        },
        {
          "name": "animation-duration",
          "description": "Animation duration in milliseconds.",
          "type": "number",
          "default": "500"
        },
        {
          "name": "indeterminate",
          "description": "The indeterminate state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-label",
          "description": "Shows/hides the label of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-format",
          "description": "Format string for the default label of the control.\nPlaceholders:\n {0} - current value of the control.\n {1} - max value of the control.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-linear-progress\"",
          "default": "\"igc-linear-progress\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "striped",
          "attribute": "striped",
          "description": "Sets the striped look of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelAlign",
          "attribute": "label-align",
          "description": "The position for the default label of the control.",
          "type": "\"top\" | \"bottom\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\"",
          "default": "\"top-start\""
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Maximum value of the control.",
          "type": "number",
          "default": "100"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value of the control.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The variant of the control.",
          "type": "\"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
          "default": "\"primary\""
        },
        {
          "name": "animationDuration",
          "attribute": "animation-duration",
          "description": "Animation duration in milliseconds.",
          "type": "number",
          "default": "500"
        },
        {
          "name": "indeterminate",
          "attribute": "indeterminate",
          "description": "The indeterminate state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideLabel",
          "attribute": "hide-label",
          "description": "Shows/hides the label of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelFormat",
          "attribute": "label-format",
          "description": "Format string for the default label of the control.\nPlaceholders:\n {0} - current value of the control.\n {1} - max value of the control.",
          "type": "string"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The text area container."
        }
      ],
      "cssParts": [
        {
          "name": "track"
        },
        {
          "name": "fill"
        },
        {
          "name": "striped"
        },
        {
          "name": "label"
        },
        {
          "name": "value"
        },
        {
          "name": "indeterminate"
        },
        {
          "name": "primary"
        },
        {
          "name": "danger"
        },
        {
          "name": "warning"
        },
        {
          "name": "info"
        },
        {
          "name": "success"
        }
      ]
    },
    {
      "name": "igc-radio-group",
      "path": "./src/components/radio-group/radio-group.ts",
      "attributes": [
        {
          "name": "alignment",
          "description": "Alignment of the radio controls inside this group.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"vertical\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-radio-group\"",
          "default": "\"igc-radio-group\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "alignment",
          "attribute": "alignment",
          "description": "Alignment of the radio controls inside this group.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"vertical\""
        }
      ]
    },
    {
      "name": "igc-radio",
      "path": "./src/components/radio/radio.ts",
      "attributes": [
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The value attribute of the control.",
          "type": "string"
        },
        {
          "name": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "description": "The checked state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the radio control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-position",
          "description": "The label position of the radio control.",
          "type": "\"before\" | \"after\"",
          "default": "\"after\""
        },
        {
          "name": "aria-labelledby",
          "description": "Sets the aria-labelledby attribute for the radio control.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-radio\"",
          "default": "\"igc-radio\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value attribute of the control.",
          "type": "string"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Makes the control a required field.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "checked",
          "attribute": "checked",
          "description": "The checked state of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the radio control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "Controls the validity of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelPosition",
          "attribute": "label-position",
          "description": "The label position of the radio control.",
          "type": "\"before\" | \"after\"",
          "default": "\"after\""
        },
        {
          "name": "ariaLabelledby",
          "attribute": "aria-labelledby",
          "description": "Sets the aria-labelledby attribute for the radio control.",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when the control's checked state changes."
        },
        {
          "name": "igcFocus",
          "description": "Emitted when the control gains focus."
        },
        {
          "name": "igcBlur",
          "description": "Emitted when the control loses focus."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The radio label."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The radio control base wrapper."
        },
        {
          "name": "control",
          "description": "The radio control."
        },
        {
          "name": "label",
          "description": "The radio control label."
        }
      ]
    },
    {
      "name": "igc-rating-symbol",
      "path": "./src/components/rating/rating-symbol.ts",
      "description": "\nUsed when a custom icon/symbol/element needs to be passed to the igc-rating component.",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-rating-symbol\"",
          "default": "\"igc-rating-symbol\""
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"styles\"]"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default slot for projected full symbols/icons."
        },
        {
          "name": "empty",
          "description": "Default slot for projected empty symbols/icons."
        }
      ],
      "cssParts": [
        {
          "name": "symbol",
          "description": "The symbol wrapping container."
        },
        {
          "name": "full",
          "description": "The full symbol wrapping container."
        },
        {
          "name": "empty",
          "description": "The empty symbol wrapping container."
        }
      ]
    },
    {
      "name": "igc-rating",
      "path": "./src/components/rating/rating.ts",
      "description": "Rating provides insight regarding others' opinions and experiences,\nand can allow the user to submit a rating of their own",
      "attributes": [
        {
          "name": "max",
          "description": "The maximum value for the rating.\n\nIf there are projected symbols, the maximum value will be resolved\nbased on the number of symbols.",
          "type": "number",
          "default": "5"
        },
        {
          "name": "step",
          "description": "The minimum value change allowed.\n\nValid values are in the interval between 0 and 1 inclusive.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "name",
          "description": "The name attribute of the control",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label of the control.",
          "type": "string"
        },
        {
          "name": "value-format",
          "description": "A format string which sets aria-valuetext. Instances of '{0}' will be replaced\nwith the current value of the control and instances of '{1}' with the maximum value for the control.\n\nImportant for screen-readers and useful for localization.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The current value of the component",
          "type": "number",
          "default": "0"
        },
        {
          "name": "disabled",
          "description": "Sets the disabled state of the component",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hover-preview",
          "description": "Sets hover preview behavior for the component",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "description": "Sets the readonly state of the component",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "single",
          "description": "Toggles single selection visual mode.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-rating\"",
          "default": "\"igc-rating\""
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"styles\"]"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "The maximum value for the rating.\n\nIf there are projected symbols, the maximum value will be resolved\nbased on the number of symbols.",
          "type": "number",
          "default": "5"
        },
        {
          "name": "step",
          "attribute": "step",
          "description": "The minimum value change allowed.\n\nValid values are in the interval between 0 and 1 inclusive.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label of the control.",
          "type": "string"
        },
        {
          "name": "valueFormat",
          "attribute": "value-format",
          "description": "A format string which sets aria-valuetext. Instances of '{0}' will be replaced\nwith the current value of the control and instances of '{1}' with the maximum value for the control.\n\nImportant for screen-readers and useful for localization.",
          "type": "string"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The current value of the component",
          "type": "number",
          "default": "0"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Sets the disabled state of the component",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hoverPreview",
          "attribute": "hover-preview",
          "description": "Sets hover preview behavior for the component",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "attribute": "readonly",
          "description": "Sets the readonly state of the component",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "single",
          "attribute": "single",
          "description": "Toggles single selection visual mode.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when the value of the control changes."
        },
        {
          "name": "igcHover",
          "description": "Emitted when hover is enabled and the user mouses over a symbol of the rating."
        }
      ],
      "cssProperties": [
        {
          "name": "--symbol-size",
          "description": "The size of the symbols."
        },
        {
          "name": "--symbol-full-color",
          "description": "The color of the filled symbol."
        },
        {
          "name": "--symbol-empty-color",
          "description": "The color of the empty symbol."
        },
        {
          "name": "--symbol-full-filter",
          "description": "The filter(s) used for the filled symbol."
        },
        {
          "name": "--symbol-empty-filter",
          "description": "The filter(s) used for the empty symbol."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The main wrapper which holds all of the rating elements."
        },
        {
          "name": "label",
          "description": "The label part."
        },
        {
          "name": "value-label",
          "description": "The value label part."
        },
        {
          "name": "symbols",
          "description": "A wrapper for all rating symbols."
        },
        {
          "name": "symbol",
          "description": "The part of the encapsulated default symbol."
        },
        {
          "name": "full",
          "description": "The part of the encapsulated full symbols."
        },
        {
          "name": "empty",
          "description": "The part of the encapsulated empty symbols."
        }
      ]
    },
    {
      "name": "igc-ripple",
      "path": "./src/components/ripple/ripple.ts",
      "description": "A ripple can be applied to an element to represent\ninteractive surface.",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-ripple\"",
          "default": "\"igc-ripple\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ]
    },
    {
      "name": "igc-select-group",
      "path": "./src/components/select/select-group.ts",
      "attributes": [
        {
          "name": "disabled",
          "description": "Whether the group item and all its children are disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether the group item and all its children are disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "items",
          "description": "All child `igc-select-item`s.",
          "type": "IgcSelectItemComponent[]"
        }
      ],
      "slots": [
        {
          "name": "label",
          "description": "Contains the group's label."
        },
        {
          "name": "",
          "description": "Intended to contain the items belonging to this group."
        }
      ],
      "cssParts": [
        {
          "name": "label",
          "description": "The native label element."
        }
      ]
    },
    {
      "name": "igc-select-header",
      "path": "./src/components/select/select-header.ts",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the header."
        }
      ]
    },
    {
      "name": "igc-select-item",
      "path": "./src/components/select/select-item.ts",
      "description": "Represents an item in a select list.",
      "attributes": [
        {
          "name": "value",
          "description": "Тhe current value of the item.\nIf not specified, the element's text content is used.",
          "type": "string"
        },
        {
          "name": "selected",
          "description": "Determines whether the item is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "description": "Determines whether the item is active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Determines whether the item is disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "textContent",
          "description": "Returns the text of the item without the prefix and suffix content.",
          "type": "string"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Тhe current value of the item.\nIf not specified, the element's text content is used.",
          "type": "string"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Determines whether the item is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "Determines whether the item is active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Determines whether the item is disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the all content bar the prefix and suffix."
        },
        {
          "name": "prefix",
          "description": "Renders content before the main content area."
        },
        {
          "name": "suffix",
          "description": "Renders content after the main content area."
        }
      ],
      "cssParts": [
        {
          "name": "prefix",
          "description": "The prefix wrapper."
        },
        {
          "name": "content",
          "description": "The main content wrapper."
        },
        {
          "name": "suffix",
          "description": "The suffix wrapper."
        }
      ]
    },
    {
      "name": "igc-select",
      "path": "./src/components/select/select.ts",
      "attributes": [
        {
          "name": "value",
          "description": "The value attribute of the control.",
          "type": "string | undefined"
        },
        {
          "name": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "The disabled attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "The required attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "description": "The invalid attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "description": "The outlined attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "autofocus",
          "description": "The autofocus attribute of the control.",
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "The label attribute of the control.",
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "dir",
          "description": "The direction attribute of the control.",
          "type": "\"ltr\" | \"rtl\" | \"auto\"",
          "default": "\"auto\""
        },
        {
          "name": "keep-open-on-select",
          "description": "Whether the dropdown should be kept open on selection.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "scroll-strategy",
          "description": "Determines the behavior of the component during scrolling the container.",
          "type": "\"scroll\" | \"block\" | \"close\"",
          "default": "\"scroll\""
        },
        {
          "name": "keep-open-on-outside-click",
          "description": "Whether the component should be kept open on clicking outside of it.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "description": "Sets the open state of the component.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placement",
          "description": "The preferred placement of the component around the target element.",
          "type": "\"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"right\" | \"right-start\" | \"right-end\" | \"left\" | \"left-start\" | \"left-end\"",
          "default": "\"bottom-start\""
        },
        {
          "name": "position-strategy",
          "description": "Sets the component's positioning strategy.",
          "type": "\"absolute\" | \"fixed\"",
          "default": "\"absolute\""
        },
        {
          "name": "flip",
          "description": "Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\nWhen true, once enough space is detected on its preferred side, it will flip back.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "distance",
          "description": "The distance from the target element.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "same-width",
          "description": "Whether the dropdown's width should be the same as the target's one.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "properties": [
        {
          "name": "value",
          "attribute": "value",
          "description": "The value attribute of the control.",
          "type": "string | undefined"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "The name attribute of the control.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "The disabled attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "The required attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "The invalid attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "The outlined attribute of the control.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "description": "The autofocus attribute of the control.",
          "type": "boolean"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label attribute of the control.",
          "type": "string"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "The placeholder attribute of the control.",
          "type": "string"
        },
        {
          "name": "dir",
          "attribute": "dir",
          "description": "The direction attribute of the control.",
          "type": "\"ltr\" | \"rtl\" | \"auto\"",
          "default": "\"auto\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "keepOpenOnSelect",
          "attribute": "keep-open-on-select",
          "description": "Whether the dropdown should be kept open on selection.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "scrollStrategy",
          "attribute": "scroll-strategy",
          "description": "Determines the behavior of the component during scrolling the container.",
          "type": "\"scroll\" | \"block\" | \"close\"",
          "default": "\"scroll\""
        },
        {
          "name": "keepOpenOnOutsideClick",
          "attribute": "keep-open-on-outside-click",
          "description": "Whether the component should be kept open on clicking outside of it.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Sets the open state of the component.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placement",
          "attribute": "placement",
          "description": "The preferred placement of the component around the target element.",
          "type": "\"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"right\" | \"right-start\" | \"right-end\" | \"left\" | \"left-start\" | \"left-end\"",
          "default": "\"bottom-start\""
        },
        {
          "name": "positionStrategy",
          "attribute": "position-strategy",
          "description": "Sets the component's positioning strategy.",
          "type": "\"absolute\" | \"fixed\"",
          "default": "\"absolute\""
        },
        {
          "name": "flip",
          "attribute": "flip",
          "description": "Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\nWhen true, once enough space is detected on its preferred side, it will flip back.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "distance",
          "attribute": "distance",
          "description": "The distance from the target element.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "sameWidth",
          "attribute": "same-width",
          "description": "Whether the dropdown's width should be the same as the target's one.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"medium\""
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when the selected item changes."
        },
        {
          "name": "igcOpening",
          "description": "Emitted just before the dropdown is open."
        },
        {
          "name": "igcOpened",
          "description": "Emitted after the dropdown is open."
        },
        {
          "name": "igcClosing",
          "description": "Emitter just before the dropdown is closed."
        },
        {
          "name": "igcClosed",
          "description": "Emitted after closing the dropdown."
        }
      ],
      "slots": [
        {
          "name": "target",
          "description": "Renders the dropdown's target element."
        },
        {
          "name": "",
          "description": "Renders the dropdown list items."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The dropdown list wrapper."
        },
        {
          "name": "list",
          "description": "The dropdown list."
        }
      ]
    },
    {
      "name": "igc-range-slider",
      "path": "./src/components/slider/range-slider.ts",
      "description": "A range slider component used to select two numeric values within a range.",
      "attributes": [
        {
          "name": "lower",
          "description": "The current value of the lower thumb.",
          "type": "number"
        },
        {
          "name": "upper",
          "description": "The current value of the upper thumb.",
          "type": "number"
        },
        {
          "name": "aria-label-lower",
          "description": "The aria label of the lower thumb.",
          "type": "string"
        },
        {
          "name": "aria-label-upper",
          "description": "The aria label of the upper thumb.",
          "type": "string"
        },
        {
          "name": "min",
          "description": "The minimum value of the slider scale. Defaults to 0.",
          "type": "number"
        },
        {
          "name": "max",
          "description": "The maximum value of the slider scale. Defaults to 100.",
          "type": "number"
        },
        {
          "name": "lower-bound",
          "description": "The lower bound of the slider value. If not set, the `min` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "upper-bound",
          "description": "The upper bound of the slider value. If not set, the `max` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "disabled",
          "description": "Disables the UI interactions of the slider.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "discrete-track",
          "description": "Marks the slider track as discrete so it displays the steps.\nIf the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-tooltip",
          "description": "Hides the thumb tooltip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "step",
          "description": "Specifies the granularity that the value must adhere to.\nIf set to 0 no stepping is implied and any value in the range is allowed.",
          "type": "number"
        },
        {
          "name": "primary-ticks",
          "description": "The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "secondary-ticks",
          "description": "The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "tick-orientation",
          "description": "Changes the orientation of the ticks.",
          "type": "\"start\" | \"end\" | \"mirror\"",
          "default": "\"end\""
        },
        {
          "name": "hide-primary-labels",
          "description": "Hides the primary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-secondary-labels",
          "description": "Hides the secondary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "locale",
          "description": "The locale used to format the thumb and tick label values in the slider.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "value-format",
          "description": "String format used for the thumb and tick label values in the slider.",
          "type": "string | undefined"
        },
        {
          "name": "tick-label-rotation",
          "description": "The degrees for the rotation of the tick labels. Defaults to 0.",
          "type": "0 | 90 | -90",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-range-slider\"",
          "default": "\"igc-range-slider\""
        },
        {
          "name": "lower",
          "attribute": "lower",
          "description": "The current value of the lower thumb.",
          "type": "number"
        },
        {
          "name": "upper",
          "attribute": "upper",
          "description": "The current value of the upper thumb.",
          "type": "number"
        },
        {
          "name": "ariaLabelLower",
          "attribute": "aria-label-lower",
          "description": "The aria label of the lower thumb.",
          "type": "string"
        },
        {
          "name": "ariaLabelUpper",
          "attribute": "aria-label-upper",
          "description": "The aria label of the upper thumb.",
          "type": "string"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "min",
          "attribute": "min",
          "description": "The minimum value of the slider scale. Defaults to 0.",
          "type": "number"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "The maximum value of the slider scale. Defaults to 100.",
          "type": "number"
        },
        {
          "name": "lowerBound",
          "attribute": "lower-bound",
          "description": "The lower bound of the slider value. If not set, the `min` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "upperBound",
          "attribute": "upper-bound",
          "description": "The upper bound of the slider value. If not set, the `max` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the UI interactions of the slider.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "discreteTrack",
          "attribute": "discrete-track",
          "description": "Marks the slider track as discrete so it displays the steps.\nIf the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideTooltip",
          "attribute": "hide-tooltip",
          "description": "Hides the thumb tooltip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "step",
          "attribute": "step",
          "description": "Specifies the granularity that the value must adhere to.\nIf set to 0 no stepping is implied and any value in the range is allowed.",
          "type": "number"
        },
        {
          "name": "primaryTicks",
          "attribute": "primary-ticks",
          "description": "The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "secondaryTicks",
          "attribute": "secondary-ticks",
          "description": "The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "tickOrientation",
          "attribute": "tick-orientation",
          "description": "Changes the orientation of the ticks.",
          "type": "\"start\" | \"end\" | \"mirror\"",
          "default": "\"end\""
        },
        {
          "name": "hidePrimaryLabels",
          "attribute": "hide-primary-labels",
          "description": "Hides the primary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideSecondaryLabels",
          "attribute": "hide-secondary-labels",
          "description": "Hides the secondary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "locale",
          "attribute": "locale",
          "description": "The locale used to format the thumb and tick label values in the slider.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "valueFormat",
          "attribute": "value-format",
          "description": "String format used for the thumb and tick label values in the slider.",
          "type": "string | undefined"
        },
        {
          "name": "valueFormatOptions",
          "description": "Number format options used for the thumb and tick label values in the slider.",
          "type": "NumberFormatOptions | undefined"
        },
        {
          "name": "tickLabelRotation",
          "attribute": "tick-label-rotation",
          "description": "The degrees for the rotation of the tick labels. Defaults to 0.",
          "type": "0 | 90 | -90",
          "default": "0"
        }
      ],
      "events": [
        {
          "name": "igcInput",
          "description": "Emitted when a value is changed via thumb drag or keyboard interaction."
        },
        {
          "name": "igcChange",
          "description": "Emitted when a value change is committed on a thumb drag end or keyboard interaction."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the slider."
        },
        {
          "name": "ticks",
          "description": "The ticks container."
        },
        {
          "name": "tick-group",
          "description": "The tick group container."
        },
        {
          "name": "tick",
          "description": "The tick element."
        },
        {
          "name": "tick-label",
          "description": "The tick label element."
        },
        {
          "name": "tick-label-inner",
          "description": "The inner element of the tick label."
        },
        {
          "name": "thumbs",
          "description": "The thumbs container."
        },
        {
          "name": "thumb",
          "description": "The thumb element."
        },
        {
          "name": "thumb-label",
          "description": "The thumb tooltip label container."
        },
        {
          "name": "thumb-label-inner",
          "description": "The thumb tooltip label inner element."
        },
        {
          "name": "track",
          "description": "The track container."
        },
        {
          "name": "steps",
          "description": "The track steps element."
        },
        {
          "name": "inactive",
          "description": "The inactive element of the track."
        },
        {
          "name": "fill",
          "description": "The filled part of the track."
        }
      ]
    },
    {
      "name": "igc-slider-label",
      "path": "./src/components/slider/slider-label.ts",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"css`\\n    :host {\\n      display: none;\\n    }\\n  `\""
        },
        {
          "name": "tagName",
          "type": "\"igc-slider-label\"",
          "default": "\"igc-slider-label\""
        }
      ]
    },
    {
      "name": "igc-slider",
      "path": "./src/components/slider/slider.ts",
      "description": "A slider component used to select numeric value within a range.",
      "attributes": [
        {
          "name": "value",
          "description": "The current value of the slider.",
          "type": "number"
        },
        {
          "name": "aria-label",
          "description": "The aria label of the slider thumb.",
          "type": "string"
        },
        {
          "name": "min",
          "description": "The minimum value of the slider scale. Defaults to 0.",
          "type": "number"
        },
        {
          "name": "max",
          "description": "The maximum value of the slider scale. Defaults to 100.",
          "type": "number"
        },
        {
          "name": "lower-bound",
          "description": "The lower bound of the slider value. If not set, the `min` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "upper-bound",
          "description": "The upper bound of the slider value. If not set, the `max` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "disabled",
          "description": "Disables the UI interactions of the slider.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "discrete-track",
          "description": "Marks the slider track as discrete so it displays the steps.\nIf the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-tooltip",
          "description": "Hides the thumb tooltip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "step",
          "description": "Specifies the granularity that the value must adhere to.\nIf set to 0 no stepping is implied and any value in the range is allowed.",
          "type": "number"
        },
        {
          "name": "primary-ticks",
          "description": "The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "secondary-ticks",
          "description": "The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "tick-orientation",
          "description": "Changes the orientation of the ticks.",
          "type": "\"start\" | \"end\" | \"mirror\"",
          "default": "\"end\""
        },
        {
          "name": "hide-primary-labels",
          "description": "Hides the primary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-secondary-labels",
          "description": "Hides the secondary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "locale",
          "description": "The locale used to format the thumb and tick label values in the slider.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "value-format",
          "description": "String format used for the thumb and tick label values in the slider.",
          "type": "string | undefined"
        },
        {
          "name": "tick-label-rotation",
          "description": "The degrees for the rotation of the tick labels. Defaults to 0.",
          "type": "0 | 90 | -90",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-slider\"",
          "default": "\"igc-slider\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The current value of the slider.",
          "type": "number"
        },
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "description": "The aria label of the slider thumb.",
          "type": "string"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "min",
          "attribute": "min",
          "description": "The minimum value of the slider scale. Defaults to 0.",
          "type": "number"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "The maximum value of the slider scale. Defaults to 100.",
          "type": "number"
        },
        {
          "name": "lowerBound",
          "attribute": "lower-bound",
          "description": "The lower bound of the slider value. If not set, the `min` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "upperBound",
          "attribute": "upper-bound",
          "description": "The upper bound of the slider value. If not set, the `max` value is applied.",
          "type": "number | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the UI interactions of the slider.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "discreteTrack",
          "attribute": "discrete-track",
          "description": "Marks the slider track as discrete so it displays the steps.\nIf the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideTooltip",
          "attribute": "hide-tooltip",
          "description": "Hides the thumb tooltip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "step",
          "attribute": "step",
          "description": "Specifies the granularity that the value must adhere to.\nIf set to 0 no stepping is implied and any value in the range is allowed.",
          "type": "number"
        },
        {
          "name": "primaryTicks",
          "attribute": "primary-ticks",
          "description": "The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "secondaryTicks",
          "attribute": "secondary-ticks",
          "description": "The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "tickOrientation",
          "attribute": "tick-orientation",
          "description": "Changes the orientation of the ticks.",
          "type": "\"start\" | \"end\" | \"mirror\"",
          "default": "\"end\""
        },
        {
          "name": "hidePrimaryLabels",
          "attribute": "hide-primary-labels",
          "description": "Hides the primary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideSecondaryLabels",
          "attribute": "hide-secondary-labels",
          "description": "Hides the secondary tick labels.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "locale",
          "attribute": "locale",
          "description": "The locale used to format the thumb and tick label values in the slider.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "valueFormat",
          "attribute": "value-format",
          "description": "String format used for the thumb and tick label values in the slider.",
          "type": "string | undefined"
        },
        {
          "name": "valueFormatOptions",
          "description": "Number format options used for the thumb and tick label values in the slider.",
          "type": "NumberFormatOptions | undefined"
        },
        {
          "name": "tickLabelRotation",
          "attribute": "tick-label-rotation",
          "description": "The degrees for the rotation of the tick labels. Defaults to 0.",
          "type": "0 | 90 | -90",
          "default": "0"
        }
      ],
      "events": [
        {
          "name": "igcInput",
          "description": "Emitted when a value is changed via thumb drag or keyboard interaction."
        },
        {
          "name": "igcChange",
          "description": "Emitted when a value change is committed on a thumb drag end or keyboard interaction."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the slider."
        },
        {
          "name": "ticks",
          "description": "The ticks container."
        },
        {
          "name": "tick-group",
          "description": "The tick group container."
        },
        {
          "name": "tick",
          "description": "The tick element."
        },
        {
          "name": "tick-label",
          "description": "The tick label element."
        },
        {
          "name": "tick-label-inner",
          "description": "The inner element of the tick label."
        },
        {
          "name": "thumbs",
          "description": "The thumbs container."
        },
        {
          "name": "thumb",
          "description": "The thumb element."
        },
        {
          "name": "thumb-label",
          "description": "The thumb tooltip label container."
        },
        {
          "name": "thumb-label-inner",
          "description": "The thumb tooltip label inner element."
        },
        {
          "name": "track",
          "description": "The track container."
        },
        {
          "name": "steps",
          "description": "The track steps element."
        },
        {
          "name": "inactive",
          "description": "The inactive element of the track."
        },
        {
          "name": "fill",
          "description": "The filled part of the track."
        }
      ]
    },
    {
      "name": "igc-snackbar",
      "path": "./src/components/snackbar/snackbar.ts",
      "description": "A snackbar component is used to provide feedback about an operation\nby showing a brief message at the bottom of the screen.",
      "attributes": [
        {
          "name": "open",
          "description": "Determines whether the snackbar is opened.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "display-time",
          "description": "Determines the duration in ms in which the snackbar will be visible.",
          "type": "number",
          "default": "4000"
        },
        {
          "name": "keep-open",
          "description": "Determines whether the snackbar should close after the displayTime is over.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "action-text",
          "description": "The snackbar action button.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "open",
          "attribute": "open",
          "description": "Determines whether the snackbar is opened.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "displayTime",
          "attribute": "display-time",
          "description": "Determines the duration in ms in which the snackbar will be visible.",
          "type": "number",
          "default": "4000"
        },
        {
          "name": "keepOpen",
          "attribute": "keep-open",
          "description": "Determines whether the snackbar should close after the displayTime is over.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "actionText",
          "attribute": "action-text",
          "description": "The snackbar action button.",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "igcAction",
          "description": "Emitted when the snackbar action button is clicked."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the snackbar content."
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the snackbar component."
        },
        {
          "name": "message",
          "description": "The snackbar message."
        },
        {
          "name": "action",
          "description": "The snackbar action button."
        }
      ]
    },
    {
      "name": "igc-step",
      "path": "./src/components/stepper/step.ts",
      "description": "The step component is used within the `igc-stepper` element and it holds the content of each step.\nIt also supports custom indicators, title and subtitle.",
      "attributes": [
        {
          "name": "invalid",
          "description": "Gets/sets whether the step is invalid.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "description": "Gets/sets whether the step is activе.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "optional",
          "description": "Gets/sets whether the step is optional.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Gets/sets whether the step is interactable.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "complete",
          "description": "Gets/sets whether the step is completed.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "header",
          "type": "HTMLElement"
        },
        {
          "name": "contentBody",
          "type": "HTMLElement"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "description": "Gets/sets whether the step is invalid.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "Gets/sets whether the step is activе.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Gets/sets whether the step is optional.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Gets/sets whether the step is interactable.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "complete",
          "attribute": "complete",
          "description": "Gets/sets whether the step is completed.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isAccessible",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "stepActiveChanged"
        },
        {
          "name": "stepDisabledInvalidChanged"
        },
        {
          "name": "stepCompleteChanged"
        },
        {
          "name": "stepHeaderKeydown"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the content of the step."
        },
        {
          "name": "indicator",
          "description": "Renders the indicator of the step. By default, it displays the step index + 1."
        },
        {
          "name": "title",
          "description": "Renders the title of the step."
        },
        {
          "name": "subtitle",
          "description": "Renders the subtitle of the step."
        }
      ],
      "cssParts": [
        {
          "name": "header-container",
          "description": "Wrapper of the step's `header` and its separators."
        },
        {
          "name": "disabled",
          "description": "Indicates a disabled state. Applies to `header-container`."
        },
        {
          "name": "complete-start",
          "description": "Indicates a complete state of the current step. Applies to `header-container`."
        },
        {
          "name": "complete-end",
          "description": "Indicates a complete state of the previous step. Applies to `header-container`."
        },
        {
          "name": "optional",
          "description": "Indicates an optional state. Applies to `header-container`."
        },
        {
          "name": "invalid",
          "description": "Indicates an invalid state. Applies to `header-container`."
        },
        {
          "name": "top",
          "description": "Indicates that the title should be above the indicator. Applies to `header-container`."
        },
        {
          "name": "bottom",
          "description": "Indicates that the title should be below the indicator. Applies to `header-container`."
        },
        {
          "name": "start",
          "description": "Indicates that the title should be before the indicator. Applies to `header-container`."
        },
        {
          "name": "end",
          "description": "Indicates that the title should be after the indicator. Applies to `header-container`."
        },
        {
          "name": "header",
          "description": "Wrapper of the step's `indicator` and `text`."
        },
        {
          "name": "indicator",
          "description": "The indicator of the step."
        },
        {
          "name": "text",
          "description": "Wrapper of the step's `title` and `subtitle`."
        },
        {
          "name": "empty",
          "description": "Indicates that no title and subtitle has been provided to the step. Applies to `text`."
        },
        {
          "name": "title",
          "description": "The title of the step."
        },
        {
          "name": "subtitle",
          "description": "The subtitle of the step."
        },
        {
          "name": "body",
          "description": "Wrapper of the step's `content`."
        },
        {
          "name": "content",
          "description": "The steps `content`."
        }
      ]
    },
    {
      "name": "igc-stepper",
      "path": "./src/components/stepper/stepper.ts",
      "description": "IgxStepper provides a wizard-like workflow by dividing content into logical steps.",
      "attributes": [
        {
          "name": "orientation",
          "description": "Gets/Sets the orientation of the stepper.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        },
        {
          "name": "step-type",
          "description": "Get/Set the type of the steps.",
          "type": "\"indicator\" | \"title\" | \"full\"",
          "default": "\"full\""
        },
        {
          "name": "linear",
          "description": "Get/Set whether the stepper is linear.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "content-top",
          "description": "Get/Set whether the content is displayed above the steps.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "title-position",
          "description": "Get/Set the position of the steps title.",
          "type": "\"start\" | \"end\" | \"top\" | \"bottom\" | undefined"
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "properties": [
        {
          "name": "steps",
          "description": "Returns all of the stepper's steps.",
          "type": "IgcStepComponent[]"
        },
        {
          "name": "orientation",
          "attribute": "orientation",
          "description": "Gets/Sets the orientation of the stepper.",
          "type": "\"vertical\" | \"horizontal\"",
          "default": "\"horizontal\""
        },
        {
          "name": "stepType",
          "attribute": "step-type",
          "description": "Get/Set the type of the steps.",
          "type": "\"indicator\" | \"title\" | \"full\"",
          "default": "\"full\""
        },
        {
          "name": "linear",
          "attribute": "linear",
          "description": "Get/Set whether the stepper is linear.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "contentTop",
          "attribute": "content-top",
          "description": "Get/Set whether the content is displayed above the steps.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dir",
          "attribute": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "titlePosition",
          "attribute": "title-position",
          "description": "Get/Set the position of the steps title.",
          "type": "\"start\" | \"end\" | \"top\" | \"bottom\" | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "events": [
        {
          "name": "igcActiveStepChanging",
          "description": "Emitted when the active step is about to change."
        },
        {
          "name": "igcActiveStepChanged",
          "description": "Emitted when the active step is changed."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the step components inside default slot."
        }
      ]
    },
    {
      "name": "igc-tab-panel",
      "path": "./src/components/tabs/tab-panel.ts",
      "description": "Represents the content of a tab",
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-tab-panel\"",
          "default": "\"igc-tab-panel\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the content."
        }
      ]
    },
    {
      "name": "igc-tab",
      "path": "./src/components/tabs/tab.ts",
      "description": "Represents the tab header.",
      "attributes": [
        {
          "name": "panel",
          "description": "The id of the tab panel which will be controlled by the tab.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "selected",
          "description": "Determines whether the tab is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Determines whether the tab is disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-tab\"",
          "default": "\"igc-tab\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "panel",
          "attribute": "panel",
          "description": "The id of the tab panel which will be controlled by the tab.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Determines whether the tab is selected.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Determines whether the tab is disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "prefix",
          "description": "Renders before the tab header content."
        },
        {
          "name": "",
          "description": "Renders the tab header content."
        },
        {
          "name": "suffix",
          "description": "Renders after the tab header content."
        }
      ],
      "cssParts": [
        {
          "name": "content",
          "description": "The content wrapper."
        },
        {
          "name": "prefix",
          "description": "The prefix wrapper."
        },
        {
          "name": "suffix",
          "description": "The suffix wrapper."
        }
      ]
    },
    {
      "name": "igc-tabs",
      "path": "./src/components/tabs/tabs.ts",
      "description": "Represents tabs component",
      "attributes": [
        {
          "name": "alignment",
          "description": "Sets the alignment for the tab headers",
          "type": "\"start\" | \"end\" | \"center\" | \"justify\"",
          "default": "\"start\""
        },
        {
          "name": "activation",
          "description": "Determines the tab activation. When set to auto,\nthe tab is instantly selected while navigating with the Left/Right Arrows, Home or End keys\nand the corresponding panel is displayed.\nWhen set to manual, the tab is only focused. The selection happens after pressing Space or Enter.",
          "type": "\"auto\" | \"manual\"",
          "default": "\"auto\""
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-tabs\"",
          "default": "\"igc-tabs\""
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"styles\""
        },
        {
          "name": "selected",
          "description": "Returns the currently selected tab.",
          "type": "string"
        },
        {
          "name": "alignment",
          "attribute": "alignment",
          "description": "Sets the alignment for the tab headers",
          "type": "\"start\" | \"end\" | \"center\" | \"justify\"",
          "default": "\"start\""
        },
        {
          "name": "activation",
          "attribute": "activation",
          "description": "Determines the tab activation. When set to auto,\nthe tab is instantly selected while navigating with the Left/Right Arrows, Home or End keys\nand the corresponding panel is displayed.\nWhen set to manual, the tab is only focused. The selection happens after pressing Space or Enter.",
          "type": "\"auto\" | \"manual\"",
          "default": "\"auto\""
        }
      ],
      "events": [
        {
          "name": "igcChange",
          "description": "Emitted when the selected tab changes."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the tab header."
        },
        {
          "name": "panel",
          "description": "Renders the tab content."
        }
      ],
      "cssParts": [
        {
          "name": "headers",
          "description": "The wrapper of the tabs including the headers content and the scroll buttons."
        },
        {
          "name": "headers-content",
          "description": "The container for the tab headers."
        },
        {
          "name": "headers-wrapper",
          "description": "The wrapper for the tab headers and the selected indicator."
        },
        {
          "name": "headers-scroll",
          "description": "The container for the headers."
        },
        {
          "name": "selected-indicator",
          "description": "The selected indicator."
        },
        {
          "name": "start-scroll-button",
          "description": "The start scroll button displayed when the tabs overflow."
        },
        {
          "name": "end-scroll-button",
          "description": "The end scroll button displayed when the tabs overflow."
        },
        {
          "name": "content",
          "description": "The container for the tabs content."
        }
      ]
    },
    {
      "name": "igc-toast",
      "path": "./src/components/toast/toast.ts",
      "description": "A toast component is used to show a notification",
      "attributes": [
        {
          "name": "open",
          "description": "Determines whether the toast is opened.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "display-time",
          "description": "Determines the time after which the toast will close",
          "type": "number",
          "default": "4000"
        },
        {
          "name": "keep-open",
          "description": "Determines whether the toast is closed automatically or not.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tagName",
          "type": "\"igc-toast\"",
          "default": "\"igc-toast\""
        },
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[\"styles\"]"
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Determines whether the toast is opened.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "displayTime",
          "attribute": "display-time",
          "description": "Determines the time after which the toast will close",
          "type": "number",
          "default": "4000"
        },
        {
          "name": "keepOpen",
          "attribute": "keep-open",
          "description": "Determines whether the toast is closed automatically or not.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "cssParts": [
        {
          "name": "base",
          "description": "The base wrapper of the toast."
        }
      ]
    },
    {
      "name": "test-popper",
      "path": "./src/components/toggle/toggle.spec.ts"
    },
    {
      "name": "igc-tree-item",
      "path": "./src/components/tree/tree-item.ts",
      "description": "The tree-item component represents a child item of the tree component or another tree item.",
      "attributes": [
        {
          "name": "label",
          "description": "The tree item label.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "expanded",
          "description": "The tree item expansion state.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "description": "Marks the item as the tree's active item.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Get/Set whether the tree item is disabled. Disabled items are ignored for user interactions.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "description": "The tree item selection state.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loading",
          "description": "To be used for load-on-demand scenarios in order to specify whether the item is loading data.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "The value entry that the tree item is visualizing. Required for searching through items.",
          "default": "\"undefined\""
        }
      ],
      "properties": [
        {
          "name": "tree",
          "description": "A reference to the tree the item is a part of.",
          "type": "IgcTreeComponent | undefined"
        },
        {
          "name": "parent",
          "description": "The parent item of the current tree item (if any)",
          "type": "IgcTreeItemComponent | null"
        },
        {
          "name": "level",
          "description": "The depth of the item, relative to the root.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The tree item label.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "expanded",
          "attribute": "expanded",
          "description": "The tree item expansion state.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "active",
          "attribute": "active",
          "description": "Marks the item as the tree's active item.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Get/Set whether the tree item is disabled. Disabled items are ignored for user interactions.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "The tree item selection state.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loading",
          "attribute": "loading",
          "description": "To be used for load-on-demand scenarios in order to specify whether the item is loading data.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "The value entry that the tree item is visualizing. Required for searching through items.",
          "default": "\"undefined\""
        },
        {
          "name": "path",
          "description": "The full path to the tree item, starting from the top-most ancestor.",
          "type": "IgcTreeItemComponent[]"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders nested tree-item component."
        },
        {
          "name": "label",
          "description": "Renders the tree item container."
        },
        {
          "name": "indicator",
          "description": "Renders the expand indicator container."
        },
        {
          "name": "loading",
          "description": "Renders the tree item loading indicator container."
        },
        {
          "name": "indentation",
          "description": "Renders the container (by default the space) before the tree item."
        }
      ],
      "cssParts": [
        {
          "name": "wrapper",
          "description": "The wrapper for the tree item."
        },
        {
          "name": "selected",
          "description": "Indicates selected state. Applies to `wrapper`."
        },
        {
          "name": "focused",
          "description": "Indicates focused state. Applies to `wrapper`."
        },
        {
          "name": "active",
          "description": "Indicates an active state. Applies to `wrapper`."
        },
        {
          "name": "indicator",
          "description": "The expand indicator of the tree item."
        },
        {
          "name": "label",
          "description": "The tree item content."
        },
        {
          "name": "text",
          "description": "The tree item displayed text."
        },
        {
          "name": "select",
          "description": "The checkbox of the tree item when selection is enabled."
        }
      ]
    },
    {
      "name": "igc-tree",
      "path": "./src/components/tree/tree.ts",
      "description": "The tree allows users to represent hierarchical data in a tree-view structure,\nmaintaining parent-child relationships, as well as to define static tree-view structure without a corresponding data model.",
      "attributes": [
        {
          "name": "single-branch-expand",
          "description": "Whether a single or multiple of a parent's child items can be expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selection",
          "description": "The selection state of the tree.",
          "type": "\"multiple\" | \"none\" | \"cascade\"",
          "default": "\"none\""
        },
        {
          "name": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "properties": [
        {
          "name": "singleBranchExpand",
          "attribute": "single-branch-expand",
          "description": "Whether a single or multiple of a parent's child items can be expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selection",
          "attribute": "selection",
          "description": "The selection state of the tree.",
          "type": "\"multiple\" | \"none\" | \"cascade\"",
          "default": "\"none\""
        },
        {
          "name": "dir",
          "attribute": "dir",
          "description": "The direction attribute of the control.",
          "type": "Direction",
          "default": "\"auto\""
        },
        {
          "name": "items",
          "description": "Returns all of the tree's items.",
          "type": "IgcTreeItemComponent[]"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Determines the size of the component.",
          "type": "\"small\" | \"medium\" | \"large\"",
          "default": "\"large\""
        }
      ],
      "events": [
        {
          "name": "igcSelection",
          "description": "Emitted when item selection is changing, before the selection completes."
        },
        {
          "name": "igcItemCollapsed",
          "description": "Emitted when tree item is collapsed."
        },
        {
          "name": "igcItemCollapsing",
          "description": "Emitted when tree item is about to collapse."
        },
        {
          "name": "igcItemExpanded",
          "description": "Emitted when tree item is expanded."
        },
        {
          "name": "igcItemExpanding",
          "description": "Emitted when tree item is about to expand."
        },
        {
          "name": "igcItemActivated",
          "description": "Emitted when the tree's `active` item changes."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Renders the tree items inside default slot."
        }
      ]
    }
  ]
}